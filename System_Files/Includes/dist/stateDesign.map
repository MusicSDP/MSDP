{"version":3,"sources":["node_modules/uuid/lib/rng.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/v1.js","node_modules/axios/lib/helpers/bind.js","node_modules/is-buffer/index.js","node_modules/axios/lib/utils.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/btoa.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/adapters/xhr.js","node_modules/ms/index.js","node_modules/debug/src/debug.js","node_modules/debug/src/browser.js","node_modules/debug/src/node.js","node_modules/debug/src/index.js","node_modules/follow-redirects/index.js","0","node_modules/axios/lib/adapters/http.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/axios.js","node_modules/axios/index.js","node_modules/adm-zip/util/fileSystem.js","node_modules/adm-zip/util/constants.js","node_modules/adm-zip/util/errors.js","node_modules/adm-zip/util/utils.js","node_modules/adm-zip/util/fattr.js","node_modules/adm-zip/util/index.js","node_modules/adm-zip/headers/entryHeader.js","node_modules/adm-zip/headers/mainHeader.js","node_modules/adm-zip/headers/index.js","node_modules/adm-zip/methods/deflater.js","node_modules/adm-zip/methods/inflater.js","node_modules/adm-zip/methods/index.js","node_modules/adm-zip/zipEntry.js","node_modules/adm-zip/zipFile.js","node_modules/adm-zip/adm-zip.js","stateDesign.js"],"names":["url","require","http","https","assert","Writable","debug","SAFE_METHODS","GET","HEAD","OPTIONS","TRACE","eventHandlers","Object","create","RedirectableRequest","options","responseCallback","call","headers","_options","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","host","hostname","on","self","_onNativeResponse","response","_processResponse","pathname","path","searchPos","indexOf","substring","search","_performRequest","wrap","protocols","exports","maxRedirects","maxBodyLength","nativeProtocols","keys","forEach","scheme","protocol","nativeProtocol","wrappedProtocol","request","callback","parse","assign","equal","get","end","event","arg","_redirectable","emit","prototype","write","data","encoding","Error","length","push","_currentRequest","abort","currentRequest","setHeader","name","value","removeHeader","method","a","b","property","defineProperty","agents","substr","agent","_currentUrl","format","_isRedirect","i","buffers","writeNext","buffer","trackRedirects","statusCode","location","followRedirects","header","test","redirectUrl","resolve","destroy","responseUrl","redirects","module","_from","_id","_inBundle","_integrity","_location","_phantomChildren","_requested","type","registry","raw","escapedName","rawSpec","saveSpec","fetchSpec","_requiredBy","_resolved","_shasum","_spec","_where","author","browser","./lib/adapters/http.js","bugs","bundleDependencies","bundlesize","threshold","dependencies","follow-redirects","is-buffer","deprecated","description","devDependencies","coveralls","es6-promise","grunt","grunt-banner","grunt-cli","grunt-contrib-clean","grunt-contrib-nodeunit","grunt-contrib-watch","grunt-eslint","grunt-karma","grunt-ts","grunt-webpack","istanbul-instrumenter-loader","jasmine-core","karma","karma-chrome-launcher","karma-coverage","karma-firefox-launcher","karma-jasmine","karma-jasmine-ajax","karma-opera-launcher","karma-safari-launcher","karma-sauce-launcher","karma-sinon","karma-sourcemap-loader","karma-webpack","load-grunt-tasks","minimist","sinon","typescript","url-search-params","webpack","webpack-dev-server","homepage","keywords","license","main","repository","scripts","build","examples","postversion","preversion","start","version","typings","fs","process","versions","originalFs","e","LOCHDR","LOCSIG","LOCVER","LOCFLG","LOCHOW","LOCTIM","LOCCRC","LOCSIZ","LOCLEN","LOCNAM","LOCEXT","EXTSIG","EXTHDR","EXTCRC","EXTSIZ","EXTLEN","CENHDR","CENSIG","CENVEM","CENVER","CENFLG","CENHOW","CENTIM","CENCRC","CENSIZ","CENLEN","CENNAM","CENEXT","CENCOM","CENDSK","CENATT","CENATX","CENOFF","ENDHDR","ENDSIG","ENDSUB","ENDTOT","ENDSIZ","ENDOFF","ENDCOM","STORED","SHRUNK","REDUCED1","REDUCED2","REDUCED3","REDUCED4","IMPLODED","DEFLATED","ENHANCED_DEFLATED","PKWARE","BZIP2","LZMA","IBM_TERSE","IBM_LZ77","FLG_ENC","FLG_COMP1","FLG_COMP2","FLG_DESC","FLG_ENH","FLG_STR","FLG_LNG","FLG_MSK","FILE","BUFFER","NONE","EF_ID","EF_SIZE","ID_ZIP64","ID_AVINFO","ID_PFS","ID_OS2","ID_NTFS","ID_OPENVMS","ID_UNIX","ID_FORK","ID_PATCH","ID_X509_PKCS7","ID_X509_CERTID_F","ID_X509_CERTID_C","ID_STRONGENC","ID_RECORD_MGT","ID_X509_PKCS7_RL","ID_IBM1","ID_IBM2","ID_POSZIP","EF_ZIP64_OR_32","EF_ZIP64_OR_16","EF_ZIP64_SUNCOMP","EF_ZIP64_SCOMP","EF_ZIP64_RHO","EF_ZIP64_DSN","pth","existsSync","crcTable","Constants","Errors","PATH_SEPARATOR","sep","mkdirSync","resolvedPath","split","stat","statSync","isFile","FILE_IN_THE_WAY","replace","makeDir","crc32","buf","Buffer","alloc","n","c","k","writeInt32LE","readUInt32LE","crc","off","len","c1","methodToString","writeFileTo","content","overwrite","attr","isDirectory","folder","fd","dirname","openSync","chmodSync","writeSync","closeSync","writeFileToAsync","undefined","exists","err","open","chmod","close","findFiles","findSync","dir","pattern","recoursive","files","readdirSync","file","join","concat","normalize","getAttributes","setAttributes","toBuffer","input","isBuffer","from","_path","_obj","directory","readonly","hidden","executable","mtime","atime","_stat","parseInt","mode","toString","basename","console","warn","readOnly","decodeAttributes","val","encodeAttributes","FileSystem","FileAttr","Utils","_verMade","_version","_flags","_method","_time","_crc","_compressedSize","_size","_fnameLen","_extraLen","_comLen","_diskStart","_inattr","_attr","_offset","_dataHeader","setTime","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","made","flags","time","compressedSize","size","fileNameLength","extraLength","commentLength","diskNumStart","inAttr","offset","encripted","entryHeaderSize","realDataOffset","fnameLen","extraLen","dataHeader","loadDataHeaderFromBinary","slice","INVALID_LOC","readUInt16LE","loadFromBinary","INVALID_CEN","dataHeaderToBinary","writeUInt32LE","writeUInt16LE","entryHeaderToBinary","fill","toUpperCase","_volumeEntries","_totalEntries","_commentLength","diskEntries","totalEntries","mainHeaderSize","INVALID_END","toBinary","EntryHeader","MainHeader","inbuf","zlib","opts","chunkSize","deflate","deflateRawSync","deflateAsync","tmp","createDeflateRaw","parts","total","written","part","copy","inflate","inflateRawSync","inflateAsync","createInflateRaw","Deflater","Inflater","Headers","Methods","_entryHeader","_entryName","_comment","_isDirectory","uncompressedData","_extra","getCompressedDataFromZip","crc32OK","decompress","async","pass","DIRECTORY_CONTENT_ERROR","compressedData","NO_DATA","BAD_CRC","inflater","result","UNKNOWN_METHOD","compress","deflater","deflated","readUInt64LE","parseZip64ExtendedInformation","entryName","rawEntryName","lastChar","extra","parseExtra","signature","comment","pop","getCompressedData","getCompressedDataAsync","setData","changed","getData","getDataAsync","packHeader","ZipEntry","inputType","entryList","entryTable","filename","inBuffer","mainHeader","readMainHeader","Math","max","endOffset","INVALID_FORMAT","readEntries","Array","index","entry","readFileSync","entries","getEntry","setEntry","deleteEntry","_self","getEntryChildren","child","splice","list","zipEntry","compressToBuffer","sort","nameA","toLowerCase","nameB","totalSize","dataBlock","entryHeaders","dindex","entryNameLen","postHeader","dataLength","entryHeader","outBuffer","mh","toAsyncBuffer","onSuccess","onFail","onItemStart","onItemEnd","arguments","callee","ZipFile","isWin","platform","_zip","_filename","INVALID_FILENAME","sanitize","prefix","l","item","readFile","readFileAsync","readAsText","readAsTextAsync","deleteFile","addZipComment","getZipComment","addZipEntryComment","getZipEntryComment","updateFile","addLocalFile","localPath","zipPath","zipName","FILE_NOT_FOUND","charAt","p","addFile","addLocalFolder","filter","RegExp","items","getEntries","extractEntryTo","targetPath","maintainEntryPath","NO_ENTRY","target","CANT_EXTRACT_FILE","childName","CANT_OVERRIDE","extractAllTo","NO_ZIP","utimesSync","extractAllToAsync","succ","writeZip","targetFileName","zipData","ok","valueOf","uuidv1","axios","AdmZip","log","output","Max","post","defaultSystem","state","system","project","session","addHandler","v","v2","add","remove","v3","v4","v5","update","loc","dest","dest2","getFromMax","importer","v1","exporter","title","newProject","loadProject","JSON","stringify","map","outlet","updateCheck","os","syspath","localVersion","appState","major","minor","revision","targetRoot","msdpRoot","msdpFile","hashFile","updateSet","autoUpdate","updater","trim","res","responseType","error","created","settings","defaultSettings","openBoards","savedBoards","sessionBoards","boardPointers","bigRandStr","proto","hasOwnProperty","modules","assets","asset","eval","getOwnPropertyDescriptor","i2","clone","removeList","m","saved","cloneModules","id","lastIndexOf","systemBoard","savedBoardList","openBoardList","uName","key","isEmpty","lastUpdated","writeFileSync","unlinkSync","renameSync","dev","msdp","lastOpened","floor","random","obj"],"mappings":"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","file":"stateDesign.map","sourceRoot":"..","sourcesContent":["// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\n\ntry {\n  var supportsColor = require('supports-color');\n  if (supportsColor && supportsColor.level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\n      205, 206, 207, 208, 209, 214, 215, 220, 221\n    ];\n  }\n} catch (err) {\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(process.stderr.fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  } else {\n    return new Date().toISOString() + ' ';\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","var url = require(\"url\");\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar assert = require(\"assert\");\nvar Writable = require(\"stream\").Writable;\nvar debug = require(\"debug\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data and end\n  var currentRequest = this._currentRequest;\n  this.write(data || \"\", encoding, function () {\n    currentRequest.end(null, null, callback);\n  });\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new Error(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext() {\n      if (i < buffers.length) {\n        var buffer = buffers[i++];\n        request.write(buffer.data, buffer.encoding, writeNext);\n      }\n      else {\n        request.end();\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: response.statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (options, callback) {\n      if (typeof options === \"string\") {\n        options = url.parse(options);\n        options.maxRedirects = exports.maxRedirects;\n      }\n      else {\n        options = Object.assign({\n          protocol: protocol,\n          maxRedirects: exports.maxRedirects,\n          maxBodyLength: exports.maxBodyLength,\n        }, options);\n      }\n      options.nativeProtocols = nativeProtocols;\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (options, callback) {\n      var request = wrappedProtocol.request(options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n",null,"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","module.exports = require('./lib/axios');","exports.require = function() {\r\n  var fs = require(\"fs\");\r\n  if (process.versions['electron']) {\r\n\t  try {\r\n\t    originalFs = require(\"original-fs\");\r\n\t    if (Object.keys(originalFs).length > 0) {\r\n\t      fs = originalFs;\r\n      }\r\n\t  } catch (e) {}\r\n  }\r\n  return fs\r\n};\r\n","module.exports = {\r\n    /* The local file header */\r\n    LOCHDR           : 30, // LOC header size\r\n    LOCSIG           : 0x04034b50, // \"PK\\003\\004\"\r\n    LOCVER           : 4,\t// version needed to extract\r\n    LOCFLG           : 6, // general purpose bit flag\r\n    LOCHOW           : 8, // compression method\r\n    LOCTIM           : 10, // modification time (2 bytes time, 2 bytes date)\r\n    LOCCRC           : 14, // uncompressed file crc-32 value\r\n    LOCSIZ           : 18, // compressed size\r\n    LOCLEN           : 22, // uncompressed size\r\n    LOCNAM           : 26, // filename length\r\n    LOCEXT           : 28, // extra field length\r\n\r\n    /* The Data descriptor */\r\n    EXTSIG           : 0x08074b50, // \"PK\\007\\008\"\r\n    EXTHDR           : 16, // EXT header size\r\n    EXTCRC           : 4, // uncompressed file crc-32 value\r\n    EXTSIZ           : 8, // compressed size\r\n    EXTLEN           : 12, // uncompressed size\r\n\r\n    /* The central directory file header */\r\n    CENHDR           : 46, // CEN header size\r\n    CENSIG           : 0x02014b50, // \"PK\\001\\002\"\r\n    CENVEM           : 4, // version made by\r\n    CENVER           : 6, // version needed to extract\r\n    CENFLG           : 8, // encrypt, decrypt flags\r\n    CENHOW           : 10, // compression method\r\n    CENTIM           : 12, // modification time (2 bytes time, 2 bytes date)\r\n    CENCRC           : 16, // uncompressed file crc-32 value\r\n    CENSIZ           : 20, // compressed size\r\n    CENLEN           : 24, // uncompressed size\r\n    CENNAM           : 28, // filename length\r\n    CENEXT           : 30, // extra field length\r\n    CENCOM           : 32, // file comment length\r\n    CENDSK           : 34, // volume number start\r\n    CENATT           : 36, // internal file attributes\r\n    CENATX           : 38, // external file attributes (host system dependent)\r\n    CENOFF           : 42, // LOC header offset\r\n\r\n    /* The entries in the end of central directory */\r\n    ENDHDR           : 22, // END header size\r\n    ENDSIG           : 0x06054b50, // \"PK\\005\\006\"\r\n    ENDSUB           : 8, // number of entries on this disk\r\n    ENDTOT           : 10, // total number of entries\r\n    ENDSIZ           : 12, // central directory size in bytes\r\n    ENDOFF           : 16, // offset of first CEN header\r\n    ENDCOM           : 20, // zip file comment length\r\n\r\n    /* Compression methods */\r\n    STORED           : 0, // no compression\r\n    SHRUNK           : 1, // shrunk\r\n    REDUCED1         : 2, // reduced with compression factor 1\r\n    REDUCED2         : 3, // reduced with compression factor 2\r\n    REDUCED3         : 4, // reduced with compression factor 3\r\n    REDUCED4         : 5, // reduced with compression factor 4\r\n    IMPLODED         : 6, // imploded\r\n    // 7 reserved\r\n    DEFLATED         : 8, // deflated\r\n    ENHANCED_DEFLATED: 9, // enhanced deflated\r\n    PKWARE           : 10,// PKWare DCL imploded\r\n    // 11 reserved\r\n    BZIP2            : 12, //  compressed using BZIP2\r\n    // 13 reserved\r\n    LZMA             : 14, // LZMA\r\n    // 15-17 reserved\r\n    IBM_TERSE        : 18, // compressed using IBM TERSE\r\n    IBM_LZ77         : 19, //IBM LZ77 z\r\n\r\n    /* General purpose bit flag */\r\n    FLG_ENC          : 0,  // encripted file\r\n    FLG_COMP1        : 1,  // compression option\r\n    FLG_COMP2        : 2,  // compression option\r\n    FLG_DESC         : 4,  // data descriptor\r\n    FLG_ENH          : 8,  // enhanced deflation\r\n    FLG_STR          : 16, // strong encryption\r\n    FLG_LNG          : 1024, // language encoding\r\n    FLG_MSK          : 4096, // mask header values\r\n\r\n    /* Load type */\r\n    FILE             : 0,\r\n    BUFFER           : 1,\r\n    NONE             : 2,\r\n\r\n    /* 4.5 Extensible data fields */\r\n    EF_ID            : 0,\r\n    EF_SIZE          : 2,\r\n\r\n    /* Header IDs */\r\n    ID_ZIP64         : 0x0001,\r\n    ID_AVINFO        : 0x0007,\r\n    ID_PFS           : 0x0008,\r\n    ID_OS2           : 0x0009,\r\n    ID_NTFS          : 0x000a,\r\n    ID_OPENVMS       : 0x000c,\r\n    ID_UNIX          : 0x000d,\r\n    ID_FORK          : 0x000e,\r\n    ID_PATCH         : 0x000f,\r\n    ID_X509_PKCS7    : 0x0014,\r\n    ID_X509_CERTID_F : 0x0015,\r\n    ID_X509_CERTID_C : 0x0016,\r\n    ID_STRONGENC     : 0x0017,\r\n    ID_RECORD_MGT    : 0x0018,\r\n    ID_X509_PKCS7_RL : 0x0019,\r\n    ID_IBM1          : 0x0065,\r\n    ID_IBM2          : 0x0066,\r\n    ID_POSZIP        : 0x4690,\r\n\r\n    EF_ZIP64_OR_32   : 0xffffffff,\r\n    EF_ZIP64_OR_16   : 0xffff,\r\n    EF_ZIP64_SUNCOMP : 0,\r\n    EF_ZIP64_SCOMP   : 8,\r\n    EF_ZIP64_RHO     : 16,\r\n    EF_ZIP64_DSN     : 24\r\n};\r\n","module.exports = {\r\n    /* Header error messages */\r\n    \"INVALID_LOC\" : \"Invalid LOC header (bad signature)\",\r\n    \"INVALID_CEN\" : \"Invalid CEN header (bad signature)\",\r\n    \"INVALID_END\" : \"Invalid END header (bad signature)\",\r\n\r\n    /* ZipEntry error messages*/\r\n    \"NO_DATA\" : \"Nothing to decompress\",\r\n    \"BAD_CRC\" : \"CRC32 checksum failed\",\r\n    \"FILE_IN_THE_WAY\" : \"There is a file in the way: %s\",\r\n    \"UNKNOWN_METHOD\" : \"Invalid/unsupported compression method\",\r\n\r\n    /* Inflater error messages */\r\n    \"AVAIL_DATA\" : \"inflate::Available inflate data did not terminate\",\r\n    \"INVALID_DISTANCE\" : \"inflate::Invalid literal/length or distance code in fixed or dynamic block\",\r\n    \"TO_MANY_CODES\" : \"inflate::Dynamic block code description: too many length or distance codes\",\r\n    \"INVALID_REPEAT_LEN\" : \"inflate::Dynamic block code description: repeat more than specified lengths\",\r\n    \"INVALID_REPEAT_FIRST\" : \"inflate::Dynamic block code description: repeat lengths with no first length\",\r\n    \"INCOMPLETE_CODES\" : \"inflate::Dynamic block code description: code lengths codes incomplete\",\r\n    \"INVALID_DYN_DISTANCE\": \"inflate::Dynamic block code description: invalid distance code lengths\",\r\n    \"INVALID_CODES_LEN\": \"inflate::Dynamic block code description: invalid literal/length code lengths\",\r\n    \"INVALID_STORE_BLOCK\" : \"inflate::Stored block length did not match one's complement\",\r\n    \"INVALID_BLOCK_TYPE\" : \"inflate::Invalid block type (type == 3)\",\r\n\r\n    /* ADM-ZIP error messages */\r\n    \"CANT_EXTRACT_FILE\" : \"Could not extract the file\",\r\n    \"CANT_OVERRIDE\" : \"Target file already exists\",\r\n    \"NO_ZIP\" : \"No zip file was loaded\",\r\n    \"NO_ENTRY\" : \"Entry doesn't exist\",\r\n    \"DIRECTORY_CONTENT_ERROR\" : \"A directory cannot have content\",\r\n    \"FILE_NOT_FOUND\" : \"File not found: %s\",\r\n    \"NOT_IMPLEMENTED\" : \"Not implemented\",\r\n    \"INVALID_FILENAME\" : \"Invalid filename\",\r\n    \"INVALID_FORMAT\" : \"Invalid or unsupported zip format. No END header found\"\r\n};","var fs = require(\"./fileSystem\").require(),\r\n    pth = require('path');\r\n\r\nfs.existsSync = fs.existsSync || pth.existsSync;\r\n\r\nmodule.exports = (function() {\r\n\r\n    var crcTable = [],\r\n        Constants = require('./constants'),\r\n        Errors = require('./errors'),\r\n\r\n        PATH_SEPARATOR = pth.sep;\r\n\r\n\r\n    function mkdirSync(/*String*/path) {\r\n        var resolvedPath = path.split(PATH_SEPARATOR)[0];\r\n        path.split(PATH_SEPARATOR).forEach(function(name) {\r\n            if (!name || name.substr(-1,1) === \":\") return;\r\n            resolvedPath += PATH_SEPARATOR + name;\r\n            var stat;\r\n            try {\r\n                stat = fs.statSync(resolvedPath);\r\n            } catch (e) {\r\n                fs.mkdirSync(resolvedPath);\r\n            }\r\n            if (stat && stat.isFile())\r\n                throw Errors.FILE_IN_THE_WAY.replace(\"%s\", resolvedPath);\r\n        });\r\n    }\r\n\r\n    function findSync(/*String*/dir, /*RegExp*/pattern, /*Boolean*/recoursive) {\r\n        if (typeof pattern === 'boolean') {\r\n            recoursive = pattern;\r\n            pattern = undefined;\r\n        }\r\n        var files = [];\r\n        fs.readdirSync(dir).forEach(function(file) {\r\n            var path = pth.join(dir, file);\r\n\r\n            if (fs.statSync(path).isDirectory() && recoursive)\r\n                files = files.concat(findSync(path, pattern, recoursive));\r\n\r\n            if (!pattern || pattern.test(path)) {\r\n                files.push(pth.normalize(path) + (fs.statSync(path).isDirectory() ? PATH_SEPARATOR : \"\"));\r\n            }\r\n\r\n        });\r\n        return files;\r\n    }\r\n\r\n    return {\r\n        makeDir : function(/*String*/path) {\r\n            mkdirSync(path);\r\n        },\r\n\r\n        crc32 : function(buf) {\r\n            if (typeof buf === 'string') {\r\n                buf = Buffer.alloc(buf.length, buf);\r\n            }\r\n            var b = Buffer.alloc(4);\r\n            if (!crcTable.length) {\r\n                for (var n = 0; n < 256; n++) {\r\n                    var c = n;\r\n                    for (var k = 8; --k >= 0;)  //\r\n                        if ((c & 1) !== 0)  { c = 0xedb88320 ^ (c >>> 1); } else { c = c >>> 1; }\r\n                    if (c < 0) {\r\n                        b.writeInt32LE(c, 0);\r\n                        c = b.readUInt32LE(0);\r\n                    }\r\n                    crcTable[n] = c;\r\n                }\r\n            }\r\n            var crc = 0, off = 0, len = buf.length, c1 = ~crc;\r\n            while(--len >= 0) c1 = crcTable[(c1 ^ buf[off++]) & 0xff] ^ (c1 >>> 8);\r\n            crc = ~c1;\r\n            b.writeInt32LE(crc & 0xffffffff, 0);\r\n            return b.readUInt32LE(0);\r\n        },\r\n\r\n        methodToString : function(/*Number*/method) {\r\n            switch (method) {\r\n                case Constants.STORED:\r\n                    return 'STORED (' + method + ')';\r\n                case Constants.DEFLATED:\r\n                    return 'DEFLATED (' + method + ')';\r\n                default:\r\n                    return 'UNSUPPORTED (' + method + ')';\r\n            }\r\n\r\n        },\r\n\r\n        writeFileTo : function(/*String*/path, /*Buffer*/content, /*Boolean*/overwrite, /*Number*/attr) {\r\n            if (fs.existsSync(path)) {\r\n                if (!overwrite)\r\n                    return false; // cannot overwrite\r\n\r\n                var stat = fs.statSync(path);\r\n                if (stat.isDirectory()) {\r\n                    return false;\r\n                }\r\n            }\r\n            var folder = pth.dirname(path);\r\n            if (!fs.existsSync(folder)) {\r\n                mkdirSync(folder);\r\n            }\r\n\r\n            var fd;\r\n            try {\r\n                fd = fs.openSync(path, 'w', 438); // 0666\r\n            } catch(e) {\r\n                fs.chmodSync(path, 438);\r\n                fd = fs.openSync(path, 'w', 438);\r\n            }\r\n            if (fd) {\r\n                try {\r\n                    fs.writeSync(fd, content, 0, content.length, 0);\r\n                }\r\n                catch (e){\r\n                    throw e;\r\n                }\r\n                finally {\r\n                    fs.closeSync(fd);\r\n                }\r\n            }\r\n            fs.chmodSync(path, attr || 438);\r\n            return true;\r\n        },\r\n\r\n        writeFileToAsync : function(/*String*/path, /*Buffer*/content, /*Boolean*/overwrite, /*Number*/attr, /*Function*/callback) {\r\n            if(typeof attr === 'function') {\r\n                callback = attr;\r\n                attr = undefined;\r\n            }\r\n\r\n            fs.exists(path, function(exists) {\r\n                if(exists && !overwrite)\r\n                    return callback(false);\r\n\r\n                fs.stat(path, function(err, stat) {\r\n                    if(exists &&stat.isDirectory()) {\r\n                        return callback(false);\r\n                    }\r\n\r\n                    var folder = pth.dirname(path);\r\n                    fs.exists(folder, function(exists) {\r\n                        if(!exists)\r\n                            mkdirSync(folder);\r\n\r\n                        fs.open(path, 'w', 438, function(err, fd) {\r\n                            if(err) {\r\n                                fs.chmod(path, 438, function() {\r\n                                    fs.open(path, 'w', 438, function(err, fd) {\r\n                                        fs.write(fd, content, 0, content.length, 0, function() {\r\n                                            fs.close(fd, function() {\r\n                                                fs.chmod(path, attr || 438, function() {\r\n                                                    callback(true);\r\n                                                })\r\n                                            });\r\n                                        });\r\n                                    });\r\n                                })\r\n                            } else {\r\n                                if(fd) {\r\n                                    fs.write(fd, content, 0, content.length, 0, function() {\r\n                                        fs.close(fd, function() {\r\n                                            fs.chmod(path, attr || 438, function() {\r\n                                                callback(true);\r\n                                            })\r\n                                        });\r\n                                    });\r\n                                } else {\r\n                                    fs.chmod(path, attr || 438, function() {\r\n                                        callback(true);\r\n                                    })\r\n                                }\r\n                            }\r\n                        });\r\n                    })\r\n                })\r\n            })\r\n        },\r\n\r\n        findFiles : function(/*String*/path) {\r\n            return findSync(path, true);\r\n        },\r\n\r\n        getAttributes : function(/*String*/path) {\r\n\r\n        },\r\n\r\n        setAttributes : function(/*String*/path) {\r\n\r\n        },\r\n\r\n        toBuffer : function(input) {\r\n            if (Buffer.isBuffer(input)) {\r\n                return input;\r\n            } else {\r\n                if (input.length === 0) {\r\n                    return Buffer.alloc(0)\r\n                }\r\n                return Buffer.from(input, 'utf8');\r\n            }\r\n        },\r\n\r\n        Constants : Constants,\r\n        Errors : Errors\r\n    }\r\n})();\r\n","var fs = require(\"./fileSystem\").require(),\r\n    pth = require(\"path\");\r\n\t\r\nfs.existsSync = fs.existsSync || pth.existsSync;\r\n\r\nmodule.exports = function(/*String*/path) {\r\n\r\n    var _path = path || \"\",\r\n        _permissions = 0,\r\n        _obj = newAttr(),\r\n        _stat = null;\r\n\r\n    function newAttr() {\r\n        return {\r\n            directory : false,\r\n            readonly : false,\r\n            hidden : false,\r\n            executable : false,\r\n            mtime : 0,\r\n            atime : 0\r\n        }\r\n    }\r\n\r\n    if (_path && fs.existsSync(_path)) {\r\n        _stat = fs.statSync(_path);\r\n        _obj.directory = _stat.isDirectory();\r\n        _obj.mtime = _stat.mtime;\r\n        _obj.atime = _stat.atime;\r\n        _obj.executable = !!(1 & parseInt ((_stat.mode & parseInt (\"777\", 8)).toString (8)[0]));\r\n        _obj.readonly = !!(2 & parseInt ((_stat.mode & parseInt (\"777\", 8)).toString (8)[0]));\r\n        _obj.hidden = pth.basename(_path)[0] === \".\";\r\n    } else {\r\n        console.warn(\"Invalid path: \" + _path)\r\n    }\r\n\r\n    return {\r\n\r\n        get directory () {\r\n            return _obj.directory;\r\n        },\r\n\r\n        get readOnly () {\r\n            return _obj.readonly;\r\n        },\r\n\r\n        get hidden () {\r\n            return _obj.hidden;\r\n        },\r\n\r\n        get mtime () {\r\n            return _obj.mtime;\r\n        },\r\n\r\n        get atime () {\r\n           return _obj.atime;\r\n        },\r\n\r\n\r\n        get executable () {\r\n            return _obj.executable;\r\n        },\r\n\r\n        decodeAttributes : function(val) {\r\n\r\n        },\r\n\r\n        encodeAttributes : function (val) {\r\n\r\n        },\r\n\r\n        toString : function() {\r\n           return '{\\n' +\r\n               '\\t\"path\" : \"' + _path + \",\\n\" +\r\n               '\\t\"isDirectory\" : ' + _obj.directory + \",\\n\" +\r\n               '\\t\"isReadOnly\" : ' + _obj.readonly + \",\\n\" +\r\n               '\\t\"isHidden\" : ' + _obj.hidden + \",\\n\" +\r\n               '\\t\"isExecutable\" : ' + _obj.executable + \",\\n\" +\r\n               '\\t\"mTime\" : ' + _obj.mtime + \"\\n\" +\r\n               '\\t\"aTime\" : ' + _obj.atime + \"\\n\" +\r\n           '}';\r\n        }\r\n    }\r\n\r\n};\r\n","module.exports = require(\"./utils\");\r\nmodule.exports.FileSystem = require(\"./fileSystem\");\r\nmodule.exports.Constants = require(\"./constants\");\r\nmodule.exports.Errors = require(\"./errors\");\r\nmodule.exports.FileAttr = require(\"./fattr\");","var Utils = require(\"../util\"),\r\n    Constants = Utils.Constants;\r\n\r\n/* The central directory file header */\r\nmodule.exports = function () {\r\n    var _verMade = 0x0A,\r\n        _version = 0x0A,\r\n        _flags = 0,\r\n        _method = 0,\r\n        _time = 0,\r\n        _crc = 0,\r\n        _compressedSize = 0,\r\n        _size = 0,\r\n        _fnameLen = 0,\r\n        _extraLen = 0,\r\n\r\n        _comLen = 0,\r\n        _diskStart = 0,\r\n        _inattr = 0,\r\n        _attr = 0,\r\n        _offset = 0;\r\n\r\n    var _dataHeader = {};\r\n\r\n    function setTime(val) {\r\n        val = new Date(val);\r\n        _time = (val.getFullYear() - 1980 & 0x7f) << 25  // b09-16 years from 1980\r\n            | (val.getMonth() + 1) << 21                 // b05-08 month\r\n            | val.getDate() << 16                        // b00-04 hour\r\n\r\n            // 2 bytes time\r\n            | val.getHours() << 11    // b11-15 hour\r\n            | val.getMinutes() << 5   // b05-10 minute\r\n            | val.getSeconds() >> 1;  // b00-04 seconds divided by 2\r\n    }\r\n\r\n    setTime(+new Date());\r\n\r\n    return {\r\n        get made () { return _verMade; },\r\n        set made (val) { _verMade = val; },\r\n\r\n        get version () { return _version; },\r\n        set version (val) { _version = val },\r\n\r\n        get flags () { return _flags },\r\n        set flags (val) { _flags = val; },\r\n\r\n        get method () { return _method; },\r\n        set method (val) { _method = val; },\r\n\r\n        get time () { return new Date(\r\n            ((_time >> 25) & 0x7f) + 1980,\r\n            ((_time >> 21) & 0x0f) - 1,\r\n            (_time >> 16) & 0x1f,\r\n            (_time >> 11) & 0x1f,\r\n            (_time >> 5) & 0x3f,\r\n            (_time & 0x1f) << 1\r\n        );\r\n        },\r\n        set time (val) {\r\n            setTime(val);\r\n        },\r\n\r\n        get crc () { return _crc; },\r\n        set crc (val) { _crc = val; },\r\n\r\n        get compressedSize () { return _compressedSize; },\r\n        set compressedSize (val) { _compressedSize = val; },\r\n\r\n        get size () { return _size; },\r\n        set size (val) { _size = val; },\r\n\r\n        get fileNameLength () { return _fnameLen; },\r\n        set fileNameLength (val) { _fnameLen = val; },\r\n\r\n        get extraLength () { return _extraLen },\r\n        set extraLength (val) { _extraLen = val; },\r\n\r\n        get commentLength () { return _comLen },\r\n        set commentLength (val) { _comLen = val },\r\n\r\n        get diskNumStart () { return _diskStart },\r\n        set diskNumStart (val) { _diskStart = val },\r\n\r\n        get inAttr () { return _inattr },\r\n        set inAttr (val) { _inattr = val },\r\n\r\n        get attr () { return _attr },\r\n        set attr (val) { _attr = val },\r\n\r\n        get offset () { return _offset },\r\n        set offset (val) { _offset = val },\r\n\r\n        get encripted () { return (_flags & 1) === 1 },\r\n\r\n        get entryHeaderSize () {\r\n            return Constants.CENHDR + _fnameLen + _extraLen + _comLen;\r\n        },\r\n\r\n        get realDataOffset () {\r\n            return _offset + Constants.LOCHDR + _dataHeader.fnameLen + _dataHeader.extraLen;\r\n        },\r\n\r\n        get dataHeader () {\r\n            return _dataHeader;\r\n        },\r\n\r\n        loadDataHeaderFromBinary : function(/*Buffer*/input) {\r\n            var data = input.slice(_offset, _offset + Constants.LOCHDR);\r\n            // 30 bytes and should start with \"PK\\003\\004\"\r\n            if (data.readUInt32LE(0) !== Constants.LOCSIG) {\r\n                throw Utils.Errors.INVALID_LOC;\r\n            }\r\n            _dataHeader = {\r\n                // version needed to extract\r\n                version : data.readUInt16LE(Constants.LOCVER),\r\n                // general purpose bit flag\r\n                flags : data.readUInt16LE(Constants.LOCFLG),\r\n                // compression method\r\n                method : data.readUInt16LE(Constants.LOCHOW),\r\n                // modification time (2 bytes time, 2 bytes date)\r\n                time : data.readUInt32LE(Constants.LOCTIM),\r\n                // uncompressed file crc-32 value\r\n                crc : data.readUInt32LE(Constants.LOCCRC),\r\n                // compressed size\r\n                compressedSize : data.readUInt32LE(Constants.LOCSIZ),\r\n                // uncompressed size\r\n                size : data.readUInt32LE(Constants.LOCLEN),\r\n                // filename length\r\n                fnameLen : data.readUInt16LE(Constants.LOCNAM),\r\n                // extra field length\r\n                extraLen : data.readUInt16LE(Constants.LOCEXT)\r\n            }\r\n        },\r\n\r\n        loadFromBinary : function(/*Buffer*/data) {\r\n            // data should be 46 bytes and start with \"PK 01 02\"\r\n            if (data.length !== Constants.CENHDR || data.readUInt32LE(0) !== Constants.CENSIG) {\r\n                throw Utils.Errors.INVALID_CEN;\r\n            }\r\n            // version made by\r\n            _verMade = data.readUInt16LE(Constants.CENVEM);\r\n            // version needed to extract\r\n            _version = data.readUInt16LE(Constants.CENVER);\r\n            // encrypt, decrypt flags\r\n            _flags = data.readUInt16LE(Constants.CENFLG);\r\n            // compression method\r\n            _method = data.readUInt16LE(Constants.CENHOW);\r\n            // modification time (2 bytes time, 2 bytes date)\r\n            _time = data.readUInt32LE(Constants.CENTIM);\r\n            // uncompressed file crc-32 value\r\n            _crc = data.readUInt32LE(Constants.CENCRC);\r\n            // compressed size\r\n            _compressedSize = data.readUInt32LE(Constants.CENSIZ);\r\n            // uncompressed size\r\n            _size = data.readUInt32LE(Constants.CENLEN);\r\n            // filename length\r\n            _fnameLen = data.readUInt16LE(Constants.CENNAM);\r\n            // extra field length\r\n            _extraLen = data.readUInt16LE(Constants.CENEXT);\r\n            // file comment length\r\n            _comLen = data.readUInt16LE(Constants.CENCOM);\r\n            // volume number start\r\n            _diskStart = data.readUInt16LE(Constants.CENDSK);\r\n            // internal file attributes\r\n            _inattr = data.readUInt16LE(Constants.CENATT);\r\n            // external file attributes\r\n            _attr = data.readUInt32LE(Constants.CENATX);\r\n            // LOC header offset\r\n            _offset = data.readUInt32LE(Constants.CENOFF);\r\n        },\r\n\r\n        dataHeaderToBinary : function() {\r\n            // LOC header size (30 bytes)\r\n            var data = Buffer.alloc(Constants.LOCHDR);\r\n            // \"PK\\003\\004\"\r\n            data.writeUInt32LE(Constants.LOCSIG, 0);\r\n            // version needed to extract\r\n            data.writeUInt16LE(_version, Constants.LOCVER);\r\n            // general purpose bit flag\r\n            data.writeUInt16LE(_flags, Constants.LOCFLG);\r\n            // compression method\r\n            data.writeUInt16LE(_method, Constants.LOCHOW);\r\n            // modification time (2 bytes time, 2 bytes date)\r\n            data.writeUInt32LE(_time, Constants.LOCTIM);\r\n            // uncompressed file crc-32 value\r\n            data.writeUInt32LE(_crc, Constants.LOCCRC);\r\n            // compressed size\r\n            data.writeUInt32LE(_compressedSize, Constants.LOCSIZ);\r\n            // uncompressed size\r\n            data.writeUInt32LE(_size, Constants.LOCLEN);\r\n            // filename length\r\n            data.writeUInt16LE(_fnameLen, Constants.LOCNAM);\r\n            // extra field length\r\n            data.writeUInt16LE(_extraLen, Constants.LOCEXT);\r\n            return data;\r\n        },\r\n\r\n        entryHeaderToBinary : function() {\r\n            // CEN header size (46 bytes)\r\n            var data = Buffer.alloc(Constants.CENHDR + _fnameLen + _extraLen + _comLen);\r\n            // \"PK\\001\\002\"\r\n            data.writeUInt32LE(Constants.CENSIG, 0);\r\n            // version made by\r\n            data.writeUInt16LE(_verMade, Constants.CENVEM);\r\n            // version needed to extract\r\n            data.writeUInt16LE(_version, Constants.CENVER);\r\n            // encrypt, decrypt flags\r\n            data.writeUInt16LE(_flags, Constants.CENFLG);\r\n            // compression method\r\n            data.writeUInt16LE(_method, Constants.CENHOW);\r\n            // modification time (2 bytes time, 2 bytes date)\r\n            data.writeUInt32LE(_time, Constants.CENTIM);\r\n            // uncompressed file crc-32 value\r\n            data.writeInt32LE(_crc & 0xFFFF, Constants.CENCRC, true);\r\n            // compressed size\r\n            data.writeUInt32LE(_compressedSize, Constants.CENSIZ);\r\n            // uncompressed size\r\n            data.writeUInt32LE(_size, Constants.CENLEN);\r\n            // filename length\r\n            data.writeUInt16LE(_fnameLen, Constants.CENNAM);\r\n            // extra field length\r\n            data.writeUInt16LE(_extraLen, Constants.CENEXT);\r\n            // file comment length\r\n            data.writeUInt16LE(_comLen, Constants.CENCOM);\r\n            // volume number start\r\n            data.writeUInt16LE(_diskStart, Constants.CENDSK);\r\n            // internal file attributes\r\n            data.writeUInt16LE(_inattr, Constants.CENATT);\r\n            // external file attributes\r\n            data.writeUInt32LE(_attr, Constants.CENATX);\r\n            // LOC header offset\r\n            data.writeUInt32LE(_offset, Constants.CENOFF);\r\n            // fill all with\r\n            data.fill(0x00, Constants.CENHDR);\r\n            return data;\r\n        },\r\n\r\n        toString : function() {\r\n            return '{\\n' +\r\n                '\\t\"made\" : ' + _verMade + \",\\n\" +\r\n                '\\t\"version\" : ' + _version + \",\\n\" +\r\n                '\\t\"flags\" : ' + _flags + \",\\n\" +\r\n                '\\t\"method\" : ' + Utils.methodToString(_method) + \",\\n\" +\r\n                '\\t\"time\" : ' + this.time + \",\\n\" +\r\n                '\\t\"crc\" : 0x' + _crc.toString(16).toUpperCase() + \",\\n\" +\r\n                '\\t\"compressedSize\" : ' + _compressedSize + \" bytes,\\n\" +\r\n                '\\t\"size\" : ' + _size + \" bytes,\\n\" +\r\n                '\\t\"fileNameLength\" : ' + _fnameLen + \",\\n\" +\r\n                '\\t\"extraLength\" : ' + _extraLen + \" bytes,\\n\" +\r\n                '\\t\"commentLength\" : ' + _comLen + \" bytes,\\n\" +\r\n                '\\t\"diskNumStart\" : ' + _diskStart + \",\\n\" +\r\n                '\\t\"inAttr\" : ' + _inattr + \",\\n\" +\r\n                '\\t\"attr\" : ' + _attr + \",\\n\" +\r\n                '\\t\"offset\" : ' + _offset + \",\\n\" +\r\n                '\\t\"entryHeaderSize\" : ' + (Constants.CENHDR + _fnameLen + _extraLen + _comLen) + \" bytes\\n\" +\r\n                '}';\r\n        }\r\n    }\r\n};\r\n","var Utils = require(\"../util\"),\r\n    Constants = Utils.Constants;\r\n\r\n/* The entries in the end of central directory */\r\nmodule.exports = function () {\r\n    var _volumeEntries = 0,\r\n        _totalEntries = 0,\r\n        _size = 0,\r\n        _offset = 0,\r\n        _commentLength = 0;\r\n\r\n    return {\r\n        get diskEntries () { return _volumeEntries },\r\n        set diskEntries (/*Number*/val) { _volumeEntries = _totalEntries = val; },\r\n\r\n        get totalEntries () { return _totalEntries },\r\n        set totalEntries (/*Number*/val) { _totalEntries = _volumeEntries = val; },\r\n\r\n        get size () { return _size },\r\n        set size (/*Number*/val) { _size = val; },\r\n\r\n        get offset () { return _offset },\r\n        set offset (/*Number*/val) { _offset = val; },\r\n\r\n        get commentLength () { return _commentLength },\r\n        set commentLength (/*Number*/val) { _commentLength = val; },\r\n\r\n        get mainHeaderSize () {\r\n            return Constants.ENDHDR + _commentLength;\r\n        },\r\n\r\n        loadFromBinary : function(/*Buffer*/data) {\r\n            // data should be 22 bytes and start with \"PK 05 06\"\r\n            if (data.length !== Constants.ENDHDR || data.readUInt32LE(0) !== Constants.ENDSIG)\r\n                throw Utils.Errors.INVALID_END;\r\n\r\n            // number of entries on this volume\r\n            _volumeEntries = data.readUInt16LE(Constants.ENDSUB);\r\n            // total number of entries\r\n            _totalEntries = data.readUInt16LE(Constants.ENDTOT);\r\n            // central directory size in bytes\r\n            _size = data.readUInt32LE(Constants.ENDSIZ);\r\n            // offset of first CEN header\r\n            _offset = data.readUInt32LE(Constants.ENDOFF);\r\n            // zip file comment length\r\n            _commentLength = data.readUInt16LE(Constants.ENDCOM);\r\n        },\r\n\r\n        toBinary : function() {\r\n           var b = Buffer.alloc(Constants.ENDHDR + _commentLength);\r\n            // \"PK 05 06\" signature\r\n            b.writeUInt32LE(Constants.ENDSIG, 0);\r\n            b.writeUInt32LE(0, 4);\r\n            // number of entries on this volume\r\n            b.writeUInt16LE(_volumeEntries, Constants.ENDSUB);\r\n            // total number of entries\r\n            b.writeUInt16LE(_totalEntries, Constants.ENDTOT);\r\n            // central directory size in bytes\r\n            b.writeUInt32LE(_size, Constants.ENDSIZ);\r\n            // offset of first CEN header\r\n            b.writeUInt32LE(_offset, Constants.ENDOFF);\r\n            // zip file comment length\r\n            b.writeUInt16LE(_commentLength, Constants.ENDCOM);\r\n            // fill comment memory with spaces so no garbage is left there\r\n            b.fill(\" \", Constants.ENDHDR);\r\n\r\n            return b;\r\n        },\r\n\r\n        toString : function() {\r\n            return '{\\n' +\r\n                '\\t\"diskEntries\" : ' + _volumeEntries + \",\\n\" +\r\n                '\\t\"totalEntries\" : ' + _totalEntries + \",\\n\" +\r\n                '\\t\"size\" : ' + _size + \" bytes,\\n\" +\r\n                '\\t\"offset\" : 0x' + _offset.toString(16).toUpperCase() + \",\\n\" +\r\n                '\\t\"commentLength\" : 0x' + _commentLength + \"\\n\" +\r\n            '}';\r\n        }\r\n    }\r\n};","exports.EntryHeader = require(\"./entryHeader\");\r\nexports.MainHeader = require(\"./mainHeader\");\r\n","module.exports = function (/*Buffer*/inbuf) {\r\n\r\n  var zlib = require(\"zlib\");\r\n  \r\n  var opts = {chunkSize: (parseInt(inbuf.length / 1024) + 1) * 1024};\r\n  \r\n  return {\r\n    deflate: function () {\r\n      return zlib.deflateRawSync(inbuf, opts);\r\n    },\r\n\r\n    deflateAsync: function (/*Function*/callback) {\r\n      var tmp = zlib.createDeflateRaw(opts), parts = [], total = 0;\r\n      tmp.on('data', function (data) {\r\n        parts.push(data);\r\n        total += data.length;\r\n      });\r\n      tmp.on('end', function () {\r\n        var buf = Buffer.alloc(total), written = 0;\r\n        buf.fill(0);\r\n        for (var i = 0; i < parts.length; i++) {\r\n          var part = parts[i];\r\n          part.copy(buf, written);\r\n          written += part.length;\r\n        }\r\n        callback && callback(buf);\r\n      });\r\n      tmp.end(inbuf);\r\n    }\r\n  }\r\n};\r\n","module.exports = function (/*Buffer*/inbuf) {\r\n\r\n  var zlib = require(\"zlib\");\r\n\r\n  return {\r\n    inflate: function () {\r\n      return zlib.inflateRawSync(inbuf);\r\n    },\r\n\r\n    inflateAsync: function (/*Function*/callback) {\r\n      var tmp = zlib.createInflateRaw(), parts = [], total = 0;\r\n      tmp.on('data', function (data) {\r\n        parts.push(data);\r\n        total += data.length;\r\n      });\r\n      tmp.on('end', function () {\r\n        var buf = Buffer.alloc(total), written = 0;\r\n        buf.fill(0);\r\n        for (var i = 0; i < parts.length; i++) {\r\n          var part = parts[i];\r\n          part.copy(buf, written);\r\n          written += part.length;\r\n        }\r\n        callback && callback(buf);\r\n      });\r\n      tmp.end(inbuf);\r\n    }\r\n  }\r\n};\r\n","exports.Deflater = require(\"./deflater\");\r\nexports.Inflater = require(\"./inflater\");","var Utils = require(\"./util\"),\r\n    Headers = require(\"./headers\"),\r\n    Constants = Utils.Constants,\r\n    Methods = require(\"./methods\");\r\n\r\nmodule.exports = function (/*Buffer*/input) {\r\n\r\n    var _entryHeader = new Headers.EntryHeader(),\r\n        _entryName = Buffer.alloc(0),\r\n        _comment = Buffer.alloc(0),\r\n        _isDirectory = false,\r\n        uncompressedData = null,\r\n        _extra = Buffer.alloc(0);\r\n\r\n    function getCompressedDataFromZip() {\r\n        if (!input || !Buffer.isBuffer(input)) {\r\n            return Buffer.alloc(0);\r\n        }\r\n        _entryHeader.loadDataHeaderFromBinary(input);\r\n        return input.slice(_entryHeader.realDataOffset, _entryHeader.realDataOffset + _entryHeader.compressedSize)\r\n    }\r\n\r\n    function crc32OK(data) {\r\n        // if bit 3 (0x08) of the general-purpose flags field is set, then the CRC-32 and file sizes are not known when the header is written\r\n        if ((_entryHeader.flags & 0x8) !== 0x8) {\r\n           if (Utils.crc32(data) !== _entryHeader.dataHeader.crc) {\r\n               return false;\r\n           }\r\n        } else {\r\n            // @TODO: load and check data descriptor header\r\n            // The fields in the local header are filled with zero, and the CRC-32 and size are appended in a 12-byte structure\r\n            // (optionally preceded by a 4-byte signature) immediately after the compressed data:\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function decompress(/*Boolean*/async, /*Function*/callback, /*String*/pass) {\r\n        if(typeof callback === 'undefined' && typeof async === 'string') {\r\n            pass=async;\r\n            async=void 0;\r\n        }\r\n        if (_isDirectory) {\r\n            if (async && callback) {\r\n                callback(Buffer.alloc(0), Utils.Errors.DIRECTORY_CONTENT_ERROR); //si added error.\r\n            }\r\n            return Buffer.alloc(0);\r\n        }\r\n\r\n        var compressedData = getCompressedDataFromZip();\r\n       \r\n        if (compressedData.length === 0) {\r\n            if (async && callback) callback(compressedData, Utils.Errors.NO_DATA);//si added error.\r\n            return compressedData;\r\n        }\r\n\r\n        var data = Buffer.alloc(_entryHeader.size);\r\n\r\n        switch (_entryHeader.method) {\r\n            case Utils.Constants.STORED:\r\n                compressedData.copy(data);\r\n                if (!crc32OK(data)) {\r\n                    if (async && callback) callback(data, Utils.Errors.BAD_CRC);//si added error\r\n                    return Utils.Errors.BAD_CRC;\r\n                } else {//si added otherwise did not seem to return data.\r\n                    if (async && callback) callback(data);\r\n                    return data;\r\n                }\r\n            case Utils.Constants.DEFLATED:\r\n                var inflater = new Methods.Inflater(compressedData);\r\n                if (!async) {\r\n                    var result = inflater.inflate(data);\r\n                    result.copy(data, 0);\r\n                    if (!crc32OK(data)) {\r\n                        console.warn(Utils.Errors.BAD_CRC + \" \" + _entryName.toString())\r\n                    }\r\n                    return data;\r\n                } else {\r\n                    inflater.inflateAsync(function(result) {\r\n                        result.copy(data, 0);\r\n                        if (!crc32OK(data)) {\r\n                            if (callback) callback(data, Utils.Errors.BAD_CRC); //si added error\r\n                        } else { //si added otherwise did not seem to return data.\r\n                            if (callback) callback(data);\r\n                        }\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                if (async && callback) callback(Buffer.alloc(0), Utils.Errors.UNKNOWN_METHOD);\r\n                return Utils.Errors.UNKNOWN_METHOD;\r\n        }\r\n    }\r\n\r\n    function compress(/*Boolean*/async, /*Function*/callback) {\r\n        if ((!uncompressedData || !uncompressedData.length) && Buffer.isBuffer(input)) {\r\n            // no data set or the data wasn't changed to require recompression\r\n            if (async && callback) callback(getCompressedDataFromZip());\r\n            return getCompressedDataFromZip();\r\n        }\r\n\r\n        if (uncompressedData.length && !_isDirectory) {\r\n            var compressedData;\r\n            // Local file header\r\n            switch (_entryHeader.method) {\r\n                case Utils.Constants.STORED:\r\n                    _entryHeader.compressedSize = _entryHeader.size;\r\n\r\n                    compressedData = Buffer.alloc(uncompressedData.length);\r\n                    uncompressedData.copy(compressedData);\r\n\r\n                    if (async && callback) callback(compressedData);\r\n                    return compressedData;\r\n                default:\r\n                case Utils.Constants.DEFLATED:\r\n\r\n                    var deflater = new Methods.Deflater(uncompressedData);\r\n                    if (!async) {\r\n                        var deflated = deflater.deflate();\r\n                        _entryHeader.compressedSize = deflated.length;\r\n                        return deflated;\r\n                    } else {\r\n                        deflater.deflateAsync(function(data) {\r\n                            compressedData = Buffer.alloc(data.length);\r\n                            _entryHeader.compressedSize = data.length;\r\n                            data.copy(compressedData);\r\n                            callback && callback(compressedData);\r\n                        })\r\n                    }\r\n                    deflater = null;\r\n                    break;\r\n            }\r\n        } else {\r\n            if (async && callback) {\r\n                callback(Buffer.alloc(0));\r\n            } else {\r\n                return Buffer.alloc(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    function readUInt64LE(buffer, offset) {\r\n        return (buffer.readUInt32LE(offset + 4) << 4) + buffer.readUInt32LE(offset);\r\n    }\r\n\r\n    function parseExtra(data) {\r\n        var offset = 0;\r\n        var signature, size, part;\r\n        while(offset<data.length) {\r\n            signature = data.readUInt16LE(offset);\r\n            offset += 2;\r\n            size = data.readUInt16LE(offset);\r\n            offset += 2;\r\n            part = data.slice(offset, offset+size);\r\n            offset += size;\r\n            if(Constants.ID_ZIP64 === signature) {\r\n                parseZip64ExtendedInformation(part);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Override header field values with values from the ZIP64 extra field\r\n    function parseZip64ExtendedInformation(data) {\r\n        var size, compressedSize, offset, diskNumStart;\r\n\r\n        if(data.length >= Constants.EF_ZIP64_SCOMP) {\r\n            size = readUInt64LE(data, Constants.EF_ZIP64_SUNCOMP);\r\n            if(_entryHeader.size === Constants.EF_ZIP64_OR_32) {\r\n                _entryHeader.size = size;\r\n            }\r\n        }\r\n        if(data.length >= Constants.EF_ZIP64_RHO) {\r\n            compressedSize = readUInt64LE(data, Constants.EF_ZIP64_SCOMP);\r\n            if(_entryHeader.compressedSize === Constants.EF_ZIP64_OR_32) {\r\n                _entryHeader.compressedSize = compressedSize;\r\n            }\r\n        }\r\n        if(data.length >= Constants.EF_ZIP64_DSN) {\r\n            offset = readUInt64LE(data, Constants.EF_ZIP64_RHO);\r\n            if(_entryHeader.offset === Constants.EF_ZIP64_OR_32) {\r\n                _entryHeader.offset = offset;\r\n            }\r\n        }\r\n        if(data.length >= Constants.EF_ZIP64_DSN+4) {\r\n            diskNumStart = data.readUInt32LE(Constants.EF_ZIP64_DSN);\r\n            if(_entryHeader.diskNumStart === Constants.EF_ZIP64_OR_16) {\r\n                _entryHeader.diskNumStart = diskNumStart;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return {\r\n        get entryName () { return _entryName.toString(); },\r\n        get rawEntryName() { return _entryName; },\r\n        set entryName (val) {\r\n            _entryName = Utils.toBuffer(val);\r\n            var lastChar = _entryName[_entryName.length - 1];\r\n            _isDirectory = (lastChar === 47) || (lastChar === 92);\r\n            _entryHeader.fileNameLength = _entryName.length;\r\n        },\r\n\r\n        get extra () { return _extra; },\r\n        set extra (val) {\r\n            _extra = val;\r\n            _entryHeader.extraLength = val.length;\r\n            parseExtra(val);\r\n        },\r\n\r\n        get comment () { return _comment.toString(); },\r\n        set comment (val) {\r\n            _comment = Utils.toBuffer(val);\r\n            _entryHeader.commentLength = _comment.length;\r\n        },\r\n\r\n        get name () { var n = _entryName.toString(); return _isDirectory ? n.substr(n.length - 1).split(\"/\").pop() : n.split(\"/\").pop(); },\r\n        get isDirectory () { return _isDirectory },\r\n\r\n        getCompressedData : function() {\r\n            return compress(false, null)\r\n        },\r\n\r\n        getCompressedDataAsync : function(/*Function*/callback) {\r\n            compress(true, callback)\r\n        },\r\n\r\n        setData : function(value) {\r\n            uncompressedData = Utils.toBuffer(value);\r\n            if (!_isDirectory && uncompressedData.length) {\r\n                _entryHeader.size = uncompressedData.length;\r\n                _entryHeader.method = Utils.Constants.DEFLATED;\r\n                _entryHeader.crc = Utils.crc32(value);\r\n                _entryHeader.changed = true;\r\n            } else { // folders and blank files should be stored\r\n                _entryHeader.method = Utils.Constants.STORED;\r\n            }\r\n        },\r\n\r\n        getData : function(pass) {\r\n            if (_entryHeader.changed) {\r\n\t\t\t\treturn uncompressedData;\r\n\t\t\t} else {\r\n\t\t\t\treturn decompress(false, null, pass);\r\n            }\r\n        },\r\n\r\n        getDataAsync : function(/*Function*/callback, pass) {\r\n\t\t\tif (_entryHeader.changed) {\r\n\t\t\t\tcallback(uncompressedData)\r\n\t\t\t} else {\r\n\t\t\t\tdecompress(true, callback, pass)\r\n            }\r\n        },\r\n\r\n        set attr(attr) { _entryHeader.attr = attr; },\r\n        get attr() { return _entryHeader.attr; },\r\n\r\n        set header(/*Buffer*/data) {\r\n            _entryHeader.loadFromBinary(data);\r\n        },\r\n\r\n        get header() {\r\n            return _entryHeader;\r\n        },\r\n\r\n        packHeader : function() {\r\n            var header = _entryHeader.entryHeaderToBinary();\r\n            // add\r\n            _entryName.copy(header, Utils.Constants.CENHDR);\r\n            if (_entryHeader.extraLength) {\r\n                _extra.copy(header, Utils.Constants.CENHDR + _entryName.length)\r\n            }\r\n            if (_entryHeader.commentLength) {\r\n                _comment.copy(header, Utils.Constants.CENHDR + _entryName.length + _entryHeader.extraLength, _comment.length);\r\n            }\r\n            return header;\r\n        },\r\n\r\n        toString : function() {\r\n            return '{\\n' +\r\n                '\\t\"entryName\" : \"' + _entryName.toString() + \"\\\",\\n\" +\r\n                '\\t\"name\" : \"' + (_isDirectory ? _entryName.toString().replace(/\\/$/, '').split(\"/\").pop() : _entryName.toString().split(\"/\").pop()) + \"\\\",\\n\" +\r\n                '\\t\"comment\" : \"' + _comment.toString() + \"\\\",\\n\" +\r\n                '\\t\"isDirectory\" : ' + _isDirectory + \",\\n\" +\r\n                '\\t\"header\" : ' + _entryHeader.toString().replace(/\\t/mg, \"\\t\\t\").replace(/}/mg, \"\\t}\")  + \",\\n\" +\r\n                '\\t\"compressedData\" : <' + (input && input.length  + \" bytes buffer\" || \"null\") + \">\\n\" +\r\n                '\\t\"data\" : <' + (uncompressedData && uncompressedData.length  + \" bytes buffer\" || \"null\") + \">\\n\" +\r\n                '}';\r\n        }\r\n    }\r\n};\r\n","var ZipEntry = require(\"./zipEntry\"),\r\n\tHeaders = require(\"./headers\"),\r\n\tUtils = require(\"./util\");\r\n\r\nmodule.exports = function (/*String|Buffer*/input, /*Number*/inputType) {\r\n\tvar entryList = [],\r\n\t\tentryTable = {},\r\n\t\t_comment = Buffer.alloc(0),\r\n\t\tfilename = \"\",\r\n\t\tfs = Utils.FileSystem.require(),\r\n\t\tinBuffer = null,\r\n\t\tmainHeader = new Headers.MainHeader();\r\n\r\n\tif (inputType === Utils.Constants.FILE) {\r\n\t\t// is a filename\r\n\t\tfilename = input;\r\n\t\tinBuffer = fs.readFileSync(filename);\r\n\t\treadMainHeader();\r\n\t} else if (inputType === Utils.Constants.BUFFER) {\r\n\t\t// is a memory buffer\r\n\t\tinBuffer = input;\r\n\t\treadMainHeader();\r\n\t} else {\r\n\t\t// none. is a new file\r\n\t}\r\n\r\n\tfunction readEntries() {\r\n\t\tentryTable = {};\r\n\t\tentryList = new Array(mainHeader.diskEntries);  // total number of entries\r\n\t\tvar index = mainHeader.offset;  // offset of first CEN header\r\n\t\tfor (var i = 0; i < entryList.length; i++) {\r\n\r\n\t\t\tvar tmp = index,\r\n\t\t\t\tentry = new ZipEntry(inBuffer);\r\n\t\t\tentry.header = inBuffer.slice(tmp, tmp += Utils.Constants.CENHDR);\r\n\r\n\t\t\tentry.entryName = inBuffer.slice(tmp, tmp += entry.header.fileNameLength);\r\n\r\n\t\t\tif (entry.header.extraLength) {\r\n\t\t\t\tentry.extra = inBuffer.slice(tmp, tmp += entry.header.extraLength);\r\n\t\t\t}\r\n\r\n\t\t\tif (entry.header.commentLength)\r\n\t\t\t\tentry.comment = inBuffer.slice(tmp, tmp + entry.header.commentLength);\r\n\r\n\t\t\tindex += entry.header.entryHeaderSize;\r\n\r\n\t\t\tentryList[i] = entry;\r\n\t\t\tentryTable[entry.entryName] = entry;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction readMainHeader() {\r\n\t\tvar i = inBuffer.length - Utils.Constants.ENDHDR, // END header size\r\n\t\t\tn = Math.max(0, i - 0xFFFF), // 0xFFFF is the max zip file comment length\r\n\t\t\tendOffset = -1; // Start offset of the END header\r\n\r\n\t\tfor (i; i >= n; i--) {\r\n\t\t\tif (inBuffer[i] !== 0x50) continue; // quick check that the byte is 'P'\r\n\t\t\tif (inBuffer.readUInt32LE(i) === Utils.Constants.ENDSIG) { // \"PK\\005\\006\"\r\n\t\t\t\tendOffset = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!~endOffset)\r\n\t\t\tthrow Utils.Errors.INVALID_FORMAT;\r\n\r\n\t\tmainHeader.loadFromBinary(inBuffer.slice(endOffset, endOffset + Utils.Constants.ENDHDR));\r\n\t\tif (mainHeader.commentLength) {\r\n\t\t\t_comment = inBuffer.slice(endOffset + Utils.Constants.ENDHDR);\r\n\t\t}\r\n\t\treadEntries();\r\n\t}\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Returns an array of ZipEntry objects existent in the current opened archive\r\n\t\t * @return Array\r\n\t\t */\r\n\t\tget entries() {\r\n\t\t\treturn entryList;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Archive comment\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget comment() {\r\n\t\t\treturn _comment.toString();\r\n\t\t},\r\n\t\tset comment(val) {\r\n\t\t\tmainHeader.commentLength = val.length;\r\n\t\t\t_comment = val;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns a reference to the entry with the given name or null if entry is inexistent\r\n\t\t *\r\n\t\t * @param entryName\r\n\t\t * @return ZipEntry\r\n\t\t */\r\n\t\tgetEntry: function (/*String*/entryName) {\r\n\t\t\treturn entryTable[entryName] || null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Adds the given entry to the entry list\r\n\t\t *\r\n\t\t * @param entry\r\n\t\t */\r\n\t\tsetEntry: function (/*ZipEntry*/entry) {\r\n\t\t\tentryList.push(entry);\r\n\t\t\tentryTable[entry.entryName] = entry;\r\n\t\t\tmainHeader.totalEntries = entryList.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Removes the entry with the given name from the entry list.\r\n\t\t *\r\n\t\t * If the entry is a directory, then all nested files and directories will be removed\r\n\t\t * @param entryName\r\n\t\t */\r\n\t\tdeleteEntry: function (/*String*/entryName) {\r\n\t\t\tvar entry = entryTable[entryName];\r\n\t\t\tif (entry && entry.isDirectory) {\r\n\t\t\t\tvar _self = this;\r\n\t\t\t\tthis.getEntryChildren(entry).forEach(function (child) {\r\n\t\t\t\t\tif (child.entryName !== entryName) {\r\n\t\t\t\t\t\t_self.deleteEntry(child.entryName)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tentryList.splice(entryList.indexOf(entry), 1);\r\n\t\t\tdelete(entryTable[entryName]);\r\n\t\t\tmainHeader.totalEntries = entryList.length;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t *  Iterates and returns all nested files and directories of the given entry\r\n\t\t *\r\n\t\t * @param entry\r\n\t\t * @return Array\r\n\t\t */\r\n\t\tgetEntryChildren: function (/*ZipEntry*/entry) {\r\n\t\t\tif (entry.isDirectory) {\r\n\t\t\t\tvar list = [],\r\n\t\t\t\t\tname = entry.entryName,\r\n\t\t\t\t\tlen = name.length;\r\n\r\n\t\t\t\tentryList.forEach(function (zipEntry) {\r\n\t\t\t\t\tif (zipEntry.entryName.substr(0, len) === name) {\r\n\t\t\t\t\t\tlist.push(zipEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn list;\r\n\t\t\t}\r\n\t\t\treturn []\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the zip file\r\n\t\t *\r\n\t\t * @return Buffer\r\n\t\t */\r\n\t\tcompressToBuffer: function () {\r\n\t\t\tif (entryList.length > 1) {\r\n\t\t\t\tentryList.sort(function (a, b) {\r\n\t\t\t\t\tvar nameA = a.entryName.toLowerCase();\r\n\t\t\t\t\tvar nameB = b.entryName.toLowerCase();\r\n\t\t\t\t\tif (nameA < nameB) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (nameA > nameB) {\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar totalSize = 0,\r\n\t\t\t\tdataBlock = [],\r\n\t\t\t\tentryHeaders = [],\r\n\t\t\t\tdindex = 0;\r\n\r\n\t\t\tmainHeader.size = 0;\r\n\t\t\tmainHeader.offset = 0;\r\n\r\n\t\t\tentryList.forEach(function (entry) {\r\n\t\t\t\t// compress data and set local and entry header accordingly. Reason why is called first\r\n\t\t\t\tvar compressedData = entry.getCompressedData();\r\n\t\t\t\t// data header\r\n\t\t\t\tentry.header.offset = dindex;\r\n\t\t\t\tvar dataHeader = entry.header.dataHeaderToBinary();\r\n\t\t\t\tvar entryNameLen = entry.rawEntryName.length;\r\n\t\t\t\tvar extra = entry.extra.toString();\r\n\t\t\t\tvar postHeader = Buffer.alloc(entryNameLen + extra.length);\r\n\t\t\t\tentry.rawEntryName.copy(postHeader, 0);\r\n\t\t\t\tpostHeader.fill(extra, entryNameLen);\r\n\r\n\t\t\t\tvar dataLength = dataHeader.length + postHeader.length + compressedData.length;\r\n\r\n\t\t\t\tdindex += dataLength;\r\n\r\n\t\t\t\tdataBlock.push(dataHeader);\r\n\t\t\t\tdataBlock.push(postHeader);\r\n\t\t\t\tdataBlock.push(compressedData);\r\n\r\n\t\t\t\tvar entryHeader = entry.packHeader();\r\n\t\t\t\tentryHeaders.push(entryHeader);\r\n\t\t\t\tmainHeader.size += entryHeader.length;\r\n\t\t\t\ttotalSize += (dataLength + entryHeader.length);\r\n\t\t\t});\r\n\r\n\t\t\ttotalSize += mainHeader.mainHeaderSize; // also includes zip file comment length\r\n\t\t\t// point to end of data and beginning of central directory first record\r\n\t\t\tmainHeader.offset = dindex;\r\n\r\n\t\t\tdindex = 0;\r\n\t\t\tvar outBuffer = Buffer.alloc(totalSize);\r\n\t\t\tdataBlock.forEach(function (content) {\r\n\t\t\t\tcontent.copy(outBuffer, dindex); // write data blocks\r\n\t\t\t\tdindex += content.length;\r\n\t\t\t});\r\n\t\t\tentryHeaders.forEach(function (content) {\r\n\t\t\t\tcontent.copy(outBuffer, dindex); // write central directory entries\r\n\t\t\t\tdindex += content.length;\r\n\t\t\t});\r\n\r\n\t\t\tvar mh = mainHeader.toBinary();\r\n\t\t\tif (_comment) {\r\n\t\t\t\t_comment.copy(mh, Utils.Constants.ENDHDR); // add zip file comment\r\n\t\t\t}\r\n\r\n\t\t\tmh.copy(outBuffer, dindex); // write main header\r\n\r\n\t\t\treturn outBuffer\r\n\t\t},\r\n\r\n\t\ttoAsyncBuffer: function (/*Function*/onSuccess, /*Function*/onFail, /*Function*/onItemStart, /*Function*/onItemEnd) {\r\n\t\t\tif (entryList.length > 1) {\r\n\t\t\t\tentryList.sort(function (a, b) {\r\n\t\t\t\t\tvar nameA = a.entryName.toLowerCase();\r\n\t\t\t\t\tvar nameB = b.entryName.toLowerCase();\r\n\t\t\t\t\tif (nameA > nameB) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (nameA < nameB) {\r\n\t\t\t\t\t\treturn 1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar totalSize = 0,\r\n\t\t\t\tdataBlock = [],\r\n\t\t\t\tentryHeaders = [],\r\n\t\t\t\tdindex = 0;\r\n\r\n\t\t\tmainHeader.size = 0;\r\n\t\t\tmainHeader.offset = 0;\r\n\r\n\t\t\tvar compress = function (entryList) {\r\n\t\t\t\tvar self = arguments.callee;\r\n\t\t\t\tif (entryList.length) {\r\n\t\t\t\t\tvar entry = entryList.pop();\r\n\t\t\t\t\tvar name = entry.entryName + entry.extra.toString();\r\n\t\t\t\t\tif (onItemStart) onItemStart(name);\r\n\t\t\t\t\tentry.getCompressedDataAsync(function (compressedData) {\r\n\t\t\t\t\t\tif (onItemEnd) onItemEnd(name);\r\n\r\n\t\t\t\t\t\tentry.header.offset = dindex;\r\n\t\t\t\t\t\t// data header\r\n\t\t\t\t\t\tvar dataHeader = entry.header.dataHeaderToBinary();\r\n\t\t\t\t\t\tvar postHeader;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tpostHeader = Buffer.alloc(name.length, name);  // using alloc will work on node  5.x+\r\n\t\t\t\t\t\t} catch(e){\r\n\t\t\t\t\t\t\tpostHeader = new Buffer(name); // use deprecated method if alloc fails...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar dataLength = dataHeader.length + postHeader.length + compressedData.length;\r\n\r\n\t\t\t\t\t\tdindex += dataLength;\r\n\r\n\t\t\t\t\t\tdataBlock.push(dataHeader);\r\n\t\t\t\t\t\tdataBlock.push(postHeader);\r\n\t\t\t\t\t\tdataBlock.push(compressedData);\r\n\r\n\t\t\t\t\t\tvar entryHeader = entry.packHeader();\r\n\t\t\t\t\t\tentryHeaders.push(entryHeader);\r\n\t\t\t\t\t\tmainHeader.size += entryHeader.length;\r\n\t\t\t\t\t\ttotalSize += (dataLength + entryHeader.length);\r\n\r\n\t\t\t\t\t\tif (entryList.length) {\r\n\t\t\t\t\t\t\tself(entryList);\r\n\t\t\t\t\t\t} else {\r\n\r\n\r\n\t\t\t\t\t\t\ttotalSize += mainHeader.mainHeaderSize; // also includes zip file comment length\r\n\t\t\t\t\t\t\t// point to end of data and beginning of central directory first record\r\n\t\t\t\t\t\t\tmainHeader.offset = dindex;\r\n\r\n\t\t\t\t\t\t\tdindex = 0;\r\n\t\t\t\t\t\t\tvar outBuffer = Buffer.alloc(totalSize);\r\n\t\t\t\t\t\t\tdataBlock.forEach(function (content) {\r\n\t\t\t\t\t\t\t\tcontent.copy(outBuffer, dindex); // write data blocks\r\n\t\t\t\t\t\t\t\tdindex += content.length;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tentryHeaders.forEach(function (content) {\r\n\t\t\t\t\t\t\t\tcontent.copy(outBuffer, dindex); // write central directory entries\r\n\t\t\t\t\t\t\t\tdindex += content.length;\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tvar mh = mainHeader.toBinary();\r\n\t\t\t\t\t\t\tif (_comment) {\r\n\t\t\t\t\t\t\t\t_comment.copy(mh, Utils.Constants.ENDHDR); // add zip file comment\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tmh.copy(outBuffer, dindex); // write main header\r\n\r\n\t\t\t\t\t\t\tonSuccess(outBuffer);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tcompress(entryList);\r\n\t\t}\r\n\t}\r\n};\r\n","var Utils = require(\"./util\");\r\nvar fs = Utils.FileSystem.require(),\r\n\tpth = require(\"path\");\r\n\r\nfs.existsSync = fs.existsSync || pth.existsSync;\r\n\r\nvar ZipEntry = require(\"./zipEntry\"),\r\n\tZipFile = require(\"./zipFile\");\r\n\r\nvar isWin = /^win/.test(process.platform);\r\n\r\n\r\nmodule.exports = function (/*String*/input) {\r\n\tvar _zip = undefined,\r\n\t\t_filename = \"\";\r\n\r\n\tif (input && typeof input === \"string\") { // load zip file\r\n\t\tif (fs.existsSync(input)) {\r\n\t\t\t_filename = input;\r\n\t\t\t_zip = new ZipFile(input, Utils.Constants.FILE);\r\n\t\t} else {\r\n\t\t\tthrow Utils.Errors.INVALID_FILENAME;\r\n\t\t}\r\n\t} else if (input && Buffer.isBuffer(input)) { // load buffer\r\n\t\t_zip = new ZipFile(input, Utils.Constants.BUFFER);\r\n\t} else { // create new zip file\r\n\t\t_zip = new ZipFile(null, Utils.Constants.NONE);\r\n\t}\r\n\r\n\tfunction sanitize(prefix, name) {\r\n\t\tprefix = pth.resolve(pth.normalize(prefix));\r\n\t\tvar parts = name.split('/');\r\n\t\tfor (var i = 0, l = parts.length; i < l; i++) {\r\n\t\t\tvar path = pth.normalize(pth.join(prefix, parts.slice(i, l).join(pth.sep)));\r\n\t\t\tif (path.indexOf(prefix) === 0) {\r\n\t\t\t\treturn path;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pth.normalize(pth.join(prefix, pth.basename(name)));\r\n\t}\r\n\r\n\tfunction getEntry(/*Object*/entry) {\r\n\t\tif (entry && _zip) {\r\n\t\t\tvar item;\r\n\t\t\t// If entry was given as a file name\r\n\t\t\tif (typeof entry === \"string\")\r\n\t\t\t\titem = _zip.getEntry(entry);\r\n\t\t\t// if entry was given as a ZipEntry object\r\n\t\t\tif (typeof entry === \"object\" && typeof entry.entryName !== \"undefined\" && typeof entry.header !== \"undefined\")\r\n\t\t\t\titem = _zip.getEntry(entry.entryName);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn {\r\n\t\t/**\r\n\t\t * Extracts the given entry from the archive and returns the content as a Buffer object\r\n\t\t * @param entry ZipEntry object or String with the full path of the entry\r\n\t\t *\r\n\t\t * @return Buffer or Null in case of error\r\n\t\t */\r\n\t\treadFile: function (/*Object*/entry) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\treturn item && item.getData() || null;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Asynchronous readFile\r\n\t\t * @param entry ZipEntry object or String with the full path of the entry\r\n\t\t * @param callback\r\n\t\t *\r\n\t\t * @return Buffer or Null in case of error\r\n\t\t */\r\n\t\treadFileAsync: function (/*Object*/entry, /*Function*/callback) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\titem.getDataAsync(callback);\r\n\t\t\t} else {\r\n\t\t\t\tcallback(null, \"getEntry failed for:\" + entry)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Extracts the given entry from the archive and returns the content as plain text in the given encoding\r\n\t\t * @param entry ZipEntry object or String with the full path of the entry\r\n\t\t * @param encoding Optional. If no encoding is specified utf8 is used\r\n\t\t *\r\n\t\t * @return String\r\n\t\t */\r\n\t\treadAsText: function (/*Object*/entry, /*String - Optional*/encoding) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\tvar data = item.getData();\r\n\t\t\t\tif (data && data.length) {\r\n\t\t\t\t\treturn data.toString(encoding || \"utf8\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn \"\";\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Asynchronous readAsText\r\n\t\t * @param entry ZipEntry object or String with the full path of the entry\r\n\t\t * @param callback\r\n\t\t * @param encoding Optional. If no encoding is specified utf8 is used\r\n\t\t *\r\n\t\t * @return String\r\n\t\t */\r\n\t\treadAsTextAsync: function (/*Object*/entry, /*Function*/callback, /*String - Optional*/encoding) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\titem.getDataAsync(function (data, err) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tcallback(data, err);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (data && data.length) {\r\n\t\t\t\t\t\tcallback(data.toString(encoding || \"utf8\"));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcallback(\"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcallback(\"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Remove the entry from the file or the entry and all it's nested directories and files if the given entry is a directory\r\n\t\t *\r\n\t\t * @param entry\r\n\t\t */\r\n\t\tdeleteFile: function (/*Object*/entry) { // @TODO: test deleteFile\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\t_zip.deleteEntry(item.entryName);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Adds a comment to the zip. The zip must be rewritten after adding the comment.\r\n\t\t *\r\n\t\t * @param comment\r\n\t\t */\r\n\t\taddZipComment: function (/*String*/comment) { // @TODO: test addZipComment\r\n\t\t\t_zip.comment = comment;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the zip comment\r\n\t\t *\r\n\t\t * @return String\r\n\t\t */\r\n\t\tgetZipComment: function () {\r\n\t\t\treturn _zip.comment || '';\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Adds a comment to a specified zipEntry. The zip must be rewritten after adding the comment\r\n\t\t * The comment cannot exceed 65535 characters in length\r\n\t\t *\r\n\t\t * @param entry\r\n\t\t * @param comment\r\n\t\t */\r\n\t\taddZipEntryComment: function (/*Object*/entry, /*String*/comment) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\titem.comment = comment;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the comment of the specified entry\r\n\t\t *\r\n\t\t * @param entry\r\n\t\t * @return String\r\n\t\t */\r\n\t\tgetZipEntryComment: function (/*Object*/entry) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\treturn item.comment || '';\r\n\t\t\t}\r\n\t\t\treturn ''\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Updates the content of an existing entry inside the archive. The zip must be rewritten after updating the content\r\n\t\t *\r\n\t\t * @param entry\r\n\t\t * @param content\r\n\t\t */\r\n\t\tupdateFile: function (/*Object*/entry, /*Buffer*/content) {\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (item) {\r\n\t\t\t\titem.setData(content);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Adds a file from the disk to the archive\r\n\t\t *\r\n\t\t * @param localPath File to add to zip\r\n\t\t * @param zipPath Optional path inside the zip\r\n\t\t * @param zipName Optional name for the file\r\n\t\t */\r\n\t\taddLocalFile: function (/*String*/localPath, /*String*/zipPath, /*String*/zipName) {\r\n\t\t\tif (fs.existsSync(localPath)) {\r\n\t\t\t\tif (zipPath) {\r\n\t\t\t\t\tzipPath = zipPath.split(\"\\\\\").join(\"/\");\r\n\t\t\t\t\tif (zipPath.charAt(zipPath.length - 1) !== \"/\") {\r\n\t\t\t\t\t\tzipPath += \"/\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tzipPath = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tvar p = localPath.split(\"\\\\\").join(\"/\").split(\"/\").pop();\r\n\r\n\t\t\t\tif (zipName) {\r\n\t\t\t\t\tthis.addFile(zipPath + zipName, fs.readFileSync(localPath), \"\", 0)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.addFile(zipPath + p, fs.readFileSync(localPath), \"\", 0)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow Utils.Errors.FILE_NOT_FOUND.replace(\"%s\", localPath);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Adds a local directory and all its nested files and directories to the archive\r\n\t\t *\r\n\t\t * @param localPath\r\n\t\t * @param zipPath optional path inside zip\r\n\t\t * @param filter optional RegExp or Function if files match will\r\n\t\t *               be included.\r\n\t\t */\r\n\t\taddLocalFolder: function (/*String*/localPath, /*String*/zipPath, /*RegExp|Function*/filter) {\r\n\t\t\tif (filter === undefined) {\r\n\t\t\t\tfilter = function () {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t};\r\n\t\t\t} else if (filter instanceof RegExp) {\r\n\t\t\t\tfilter = function (filter) {\r\n\t\t\t\t\treturn function (filename) {\r\n\t\t\t\t\t\treturn filter.test(filename);\r\n\t\t\t\t\t}\r\n\t\t\t\t}(filter);\r\n\t\t\t}\r\n\r\n\t\t\tif (zipPath) {\r\n\t\t\t\tzipPath = zipPath.split(\"\\\\\").join(\"/\");\r\n\t\t\t\tif (zipPath.charAt(zipPath.length - 1) !== \"/\") {\r\n\t\t\t\t\tzipPath += \"/\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tzipPath = \"\";\r\n\t\t\t}\r\n\t\t\t// normalize the path first\r\n\t\t\tlocalPath = pth.normalize(localPath);\r\n\t\t\tlocalPath = localPath.split(\"\\\\\").join(\"/\"); //windows fix\r\n\t\t\tif (localPath.charAt(localPath.length - 1) !== \"/\")\r\n\t\t\t\tlocalPath += \"/\";\r\n\r\n\t\t\tif (fs.existsSync(localPath)) {\r\n\r\n\t\t\t\tvar items = Utils.findFiles(localPath),\r\n\t\t\t\t\tself = this;\r\n\r\n\t\t\t\tif (items.length) {\r\n\t\t\t\t\titems.forEach(function (path) {\r\n\t\t\t\t\t\tvar p = path.split(\"\\\\\").join(\"/\").replace(new RegExp(localPath.replace(/(\\(|\\))/g, '\\\\$1'), 'i'), \"\"); //windows fix\r\n\t\t\t\t\t\tif (filter(p)) {\r\n\t\t\t\t\t\t\tif (p.charAt(p.length - 1) !== \"/\") {\r\n\t\t\t\t\t\t\t\tself.addFile(zipPath + p, fs.readFileSync(path), \"\", 0)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tself.addFile(zipPath + p, Buffer.alloc(0), \"\", 0)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow Utils.Errors.FILE_NOT_FOUND.replace(\"%s\", localPath);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Allows you to create a entry (file or directory) in the zip file.\r\n\t\t * If you want to create a directory the entryName must end in / and a null buffer should be provided.\r\n\t\t * Comment and attributes are optional\r\n\t\t *\r\n\t\t * @param entryName\r\n\t\t * @param content\r\n\t\t * @param comment\r\n\t\t * @param attr\r\n\t\t */\r\n\t\taddFile: function (/*String*/entryName, /*Buffer*/content, /*String*/comment, /*Number*/attr) {\r\n\t\t\tvar entry = new ZipEntry();\r\n\t\t\tentry.entryName = entryName;\r\n\t\t\tentry.comment = comment || \"\";\r\n\r\n\t\t\tif (!attr) {\r\n\t\t\t\tif (entry.isDirectory) {\r\n\t\t\t\t\tattr = (0o40755 << 16) | 0x10; // (permissions drwxr-xr-x) + (MS-DOS directory flag)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tattr = 0o644 << 16; // permissions -r-wr--r--\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tentry.attr = attr;\r\n\r\n\t\t\tentry.setData(content);\r\n\t\t\t_zip.setEntry(entry);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns an array of ZipEntry objects representing the files and folders inside the archive\r\n\t\t *\r\n\t\t * @return Array\r\n\t\t */\r\n\t\tgetEntries: function () {\r\n\t\t\tif (_zip) {\r\n\t\t\t\treturn _zip.entries;\r\n\t\t\t} else {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns a ZipEntry object representing the file or folder specified by ``name``.\r\n\t\t *\r\n\t\t * @param name\r\n\t\t * @return ZipEntry\r\n\t\t */\r\n\t\tgetEntry: function (/*String*/name) {\r\n\t\t\treturn getEntry(name);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Extracts the given entry to the given targetPath\r\n\t\t * If the entry is a directory inside the archive, the entire directory and it's subdirectories will be extracted\r\n\t\t *\r\n\t\t * @param entry ZipEntry object or String with the full path of the entry\r\n\t\t * @param targetPath Target folder where to write the file\r\n\t\t * @param maintainEntryPath If maintainEntryPath is true and the entry is inside a folder, the entry folder\r\n\t\t *                          will be created in targetPath as well. Default is TRUE\r\n\t\t * @param overwrite If the file already exists at the target path, the file will be overwriten if this is true.\r\n\t\t *                  Default is FALSE\r\n\t\t *\r\n\t\t * @return Boolean\r\n\t\t */\r\n\t\textractEntryTo: function (/*Object*/entry, /*String*/targetPath, /*Boolean*/maintainEntryPath, /*Boolean*/overwrite) {\r\n\t\t\toverwrite = overwrite || false;\r\n\t\t\tmaintainEntryPath = typeof maintainEntryPath === \"undefined\" ? true : maintainEntryPath;\r\n\r\n\t\t\tvar item = getEntry(entry);\r\n\t\t\tif (!item) {\r\n\t\t\t\tthrow Utils.Errors.NO_ENTRY;\r\n\t\t\t}\r\n\r\n\t\t\tvar entryName = item.entryName;\r\n\r\n\t\t\tvar target = sanitize(targetPath, maintainEntryPath ? entryName : pth.basename(entryName));\r\n\r\n\t\t\tif (item.isDirectory) {\r\n\t\t\t\ttarget = pth.resolve(target, \"..\");\r\n\t\t\t\tvar children = _zip.getEntryChildren(item);\r\n\t\t\t\tchildren.forEach(function (child) {\r\n\t\t\t\t\tif (child.isDirectory) return;\r\n\t\t\t\t\tvar content = child.getData();\r\n\t\t\t\t\tif (!content) {\r\n\t\t\t\t\t\tthrow Utils.Errors.CANT_EXTRACT_FILE;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar childName = sanitize(targetPath, maintainEntryPath ? child.entryName : pth.basename(child.entryName));\r\n\r\n\t\t\t\t\tUtils.writeFileTo(childName, content, overwrite);\r\n\t\t\t\t});\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar content = item.getData();\r\n\t\t\tif (!content) throw Utils.Errors.CANT_EXTRACT_FILE;\r\n\r\n\t\t\tif (fs.existsSync(target) && !overwrite) {\r\n\t\t\t\tthrow Utils.Errors.CANT_OVERRIDE;\r\n\t\t\t}\r\n\t\t\tUtils.writeFileTo(target, content, overwrite);\r\n\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Test the archive\r\n\t\t *\r\n\t\t */\r\n\t\ttest: function () {\r\n\t\t\tif (!_zip) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var entry in _zip.entries) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (entry.isDirectory) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar content = _zip.entries[entry].getData();\r\n\t\t\t\t\tif (!content) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Extracts the entire archive to the given location\r\n\t\t *\r\n\t\t * @param targetPath Target location\r\n\t\t * @param overwrite If the file already exists at the target path, the file will be overwriten if this is true.\r\n\t\t *                  Default is FALSE\r\n\t\t */\r\n\t\textractAllTo: function (/*String*/targetPath, /*Boolean*/overwrite) {\r\n\t\t\toverwrite = overwrite || false;\r\n\t\t\tif (!_zip) {\r\n\t\t\t\tthrow Utils.Errors.NO_ZIP;\r\n\t\t\t}\r\n\t\t\t_zip.entries.forEach(function (entry) {\r\n\t\t\t\tvar entryName = sanitize(targetPath, entry.entryName.toString());\r\n\t\t\t\tif (entry.isDirectory) {\r\n\t\t\t\t\tUtils.makeDir(entryName);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tvar content = entry.getData();\r\n\t\t\t\tif (!content) {\r\n\t\t\t\t\tthrow Utils.Errors.CANT_EXTRACT_FILE;\r\n\t\t\t\t}\r\n\t\t\t\tUtils.writeFileTo(entryName, content, overwrite);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfs.utimesSync(entryName, entry.header.time, entry.header.time)\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tthrow Utils.Errors.CANT_EXTRACT_FILE;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Asynchronous extractAllTo\r\n\t\t *\r\n\t\t * @param targetPath Target location\r\n\t\t * @param overwrite If the file already exists at the target path, the file will be overwriten if this is true.\r\n\t\t *                  Default is FALSE\r\n\t\t * @param callback\r\n\t\t */\r\n\t\textractAllToAsync: function (/*String*/targetPath, /*Boolean*/overwrite, /*Function*/callback) {\r\n\t\t\tif (!callback) {\r\n\t\t\t\tcallback = function() {}\r\n\t\t\t}\r\n\t\t\toverwrite = overwrite || false;\r\n\t\t\tif (!_zip) {\r\n\t\t\t\tcallback(new Error(Utils.Errors.NO_ZIP));\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar entries = _zip.entries;\r\n\t\t\tvar i = entries.length;\r\n\t\t\tentries.forEach(function (entry) {\r\n\t\t\t\tif (i <= 0) return; // Had an error already\r\n\r\n\t\t\t\tvar entryName = pth.normalize(entry.entryName.toString());\r\n\r\n\t\t\t\tif (entry.isDirectory) {\r\n\t\t\t\t\tUtils.makeDir(sanitize(targetPath, entryName));\r\n\t\t\t\t\tif (--i === 0)\r\n\t\t\t\t\t\tcallback(undefined);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tentry.getDataAsync(function (content, err) {\r\n\t\t\t\t\tif (i <= 0) return;\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tcallback(new Error(err));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!content) {\r\n\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\t\tcallback(new Error(Utils.Errors.CANT_EXTRACT_FILE));\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tUtils.writeFileToAsync(sanitize(targetPath, entryName), content, overwrite, function (succ) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tfs.utimesSync(pth.resolve(targetPath, entryName), entry.header.time, entry.header.time);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tcallback(new Error('Unable to set utimes'));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (i <= 0) return;\r\n\t\t\t\t\t\tif (!succ) {\r\n\t\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\t\t\tcallback(new Error('Unable to write'));\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (--i === 0)\r\n\t\t\t\t\t\t\tcallback(undefined);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Writes the newly created zip file to disk at the specified location or if a zip was opened and no ``targetFileName`` is provided, it will overwrite the opened zip\r\n\t\t *\r\n\t\t * @param targetFileName\r\n\t\t * @param callback\r\n\t\t */\r\n\t\twriteZip: function (/*String*/targetFileName, /*Function*/callback) {\r\n\t\t\tif (arguments.length === 1) {\r\n\t\t\t\tif (typeof targetFileName === \"function\") {\r\n\t\t\t\t\tcallback = targetFileName;\r\n\t\t\t\t\ttargetFileName = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!targetFileName && _filename) {\r\n\t\t\t\ttargetFileName = _filename;\r\n\t\t\t}\r\n\t\t\tif (!targetFileName) return;\r\n\r\n\t\t\tvar zipData = _zip.compressToBuffer();\r\n\t\t\tif (zipData) {\r\n\t\t\t\tvar ok = Utils.writeFileTo(targetFileName, zipData, true);\r\n\t\t\t\tif (typeof callback === 'function') callback(!ok ? new Error(\"failed\") : null, \"\");\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Returns the content of the entire zip file as a Buffer object\r\n\t\t *\r\n\t\t * @return Buffer\r\n\t\t */\r\n\t\ttoBuffer: function (/*Function*/onSuccess, /*Function*/onFail, /*Function*/onItemStart, /*Function*/onItemEnd) {\r\n\t\t\tthis.valueOf = 2;\r\n\t\t\tif (typeof onSuccess === \"function\") {\r\n\t\t\t\t_zip.toAsyncBuffer(onSuccess, onFail, onItemStart, onItemEnd);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn _zip.compressToBuffer()\r\n\t\t}\r\n\t}\r\n};\r\n","//comment lines 2-4 out when building the parcel package. Then copy-paste the lines into the beginning of the distribution package\r\n// const Max = require('max-api')\r\n// const path = require('path')\r\n// const fs = require('fs')\r\nconst uuidv1 = require('uuid/v1')\r\nconst axios = require('axios')\r\nconst AdmZip = require('adm-zip')\r\n\r\nlet debug = false\r\nlet log = (output) => { if (debug) Max.post(output) }\r\nlet defaultSystem = {\r\n  \"uName\": null, \"os\": \"Windows\", \"autoUpdate\": null, \"vidFPS\": 2, \"recFPS\": 1,\r\n  \"appState\": { \"major\": null, \"minor\": null, \"revision\": null, \"state\": null },\r\n  \"io\": { \"driver\": null, \"in\": null, \"out\": null, \"sampleRate\": null, \"ioVector\": null, \"sigVector\": null },\r\n  \"defaultSettings\": { \"dac\": 1, \"limiter\": 1, \"volume\": 127, \"fullScreen\": 1, \"metroTog\": 1, \"bpm\": 120, \"showBoards\": 1, \"initEvent\": 0, \"keyboardMIDI\": false, \"keyOctave\": 4, \"recType\": 0, \"vWidth\": 320, \"vHeight\": 320, \"vChan\": 1 }\r\n}\r\nlet state = {\r\n  system: defaultSystem,\r\n  project: {\r\n    \"title\": null, \"created\": null, \"lastOpened\": null, \"lastUpdated\" : null, \"path\": null, \"settings\": {}, \"openBoards\": [], \"savedBoards\": [],\r\n    \"systemBoard\": {\"metroSettings\": {\"bpm\": 120,\"bpMeasure\": 4,\"tick\": 0,\"customDiv\": 5}, \"virtualControllers\": {\"keyboard\": 0,\"slider\": 0,\"pads\": 0}}\r\n  }\r\n}\r\n\r\nlet session = { \"sessionBoards\": [], \"boardPointers\": {} }\r\n\r\n// collection of Max handlers - messages from Max that run functions\r\n// Max.addHandler(\"updateCheck\", () => {updateCheck()})\r\nMax.addHandler(\"add\", (type, v, v2) => {add(type, v, v2)})\r\nMax.addHandler(\"remove\", (type, v, v2) => {remove(type, v, v2)})\r\nMax.addHandler(\"update\", (type, v, v2, v3, v4, v5) => {update(type, v, v2, v3, v4, v5)})\r\nMax.addHandler(\"copy\", (loc, val, dest, dest2) => {copy(loc, val, dest, dest2)})\r\nMax.addHandler(\"get\", (type, v, v2) => {getFromMax(type, v, v2)})\r\nMax.addHandler(\"import\", (type, path) => {importer(type, path)})\r\nMax.addHandler(\"export\", (type, v1, v2) => {exporter(type, v1, v2)})\r\nMax.addHandler(\"newProject\", (title, path) => {newProject(title, path)})\r\nMax.addHandler(\"loadProject\", (path) => { loadProject(path);});\r\nMax.addHandler(\"projectOut\", () => { // send project dict to dict viewer patch\r\n  [\"sendTo MSDP_View_Dict_State\", \"sendGate 1\", JSON.stringify(state, null, 4), \"sendGate 0\" ].map(Max.outlet);\r\n});\r\nMax.addHandler(\"sessionOut\", () => { // send session dict to dict viewer patch\r\n  [\"sendTo MSDP_View_Dict_Session\", \"sendGate 1\", JSON.stringify(session, null, 4), \"sendGate 0\" ].map(Max.outlet);\r\n});\r\nMax.addHandler(\"debug\", (v) => {debug = v; Max.post(`debug mode ${v}`)});\r\nMax.addHandler(\"updateCheck\", (path) => { updateCheck(path) })\r\n\r\nconst updateCheck = (path) => { // updater code goes here\r\n  try {\r\n    const os = require('os').platform() // darwin | win32\r\n    let syspath = path\r\n    log('this is path ' + syspath)\r\n    let localVersion = JSON.stringify(state.system.appState.major) + '.' + JSON.stringify(state.system.appState.minor) + '.' + JSON.stringify(state.system.appState.revision)\r\n    log('this is version ' + localVersion)\r\n    const targetRoot = (os === 'darwin') ? '/tmp/msdp/test' : '/tmp/msdp/test'\r\n    const msdpRoot = 'http://musicsdp.com/download'\r\n    const msdpFile = `${msdpRoot}/music_sdp.${os}.zip`, hashFile = 'music_sdp.hash'\r\n    const updateSet = state.system.autoUpdate\r\n    const updater = async _ => {\r\n      const res = await axios.get(`${msdpRoot}/${hashFile}`)\r\n      const hash = res.data.toString().trim()\r\n      if (! ( hash === localVersion )) {\r\n        log(\"update found\")\r\n        if ( updateSet === 1 ) {\r\n          const res = await axios.get(msdpFile, {responseType: 'arraybuffer'})\r\n          new AdmZip(res.data).extractAllTo(syspath, true)\r\n          log('update confirmed')\r\n          // fs.writeFileSync(`${targetRoot}/${hashFile}`, hash, 'utf8')\r\n        }\r\n        else { log('autoSet off') }\r\n        // send command back to MSDP to initialize update ask\r\n      }\r\n      else { log('program is already up-to-date') }\r\n    }\r\n    log(\"checking for update\")\r\n    updater()\r\n  }\r\n  catch(error) { log(error) }\r\n}\r\n\r\nconst newProject = (title, path) => { // blank out project and session dictionaries to begin new project\r\n  try {\r\n    state.project.title = title;\r\n    state.project.created = new Date();\r\n    state.project.settings = state.system.defaultSettings;\r\n    state.project.openBoards = state.project.savedBoards = session.sessionBoards = [];\r\n    session.boardPointers = {};\r\n    exporter('project', path);\r\n    getFromMax(\"pSettings\");\r\n    [\"sendTo MSDP_newboard_load\", \"sendGate 1\", \"bang\", \"sendGate 0\" ].map(Max.outlet);\r\n    [\"sendTo MSDP_System_Board_Audio_Path\", 'sendGate 1', 'bang', 'sendGate 0'].map(Max.outlet);\r\n  }\r\n  catch(error) { log(error) }\r\n}\r\nconst loadProject = (path) => { // load the project state\r\n  try {\r\n    importer(\"project\", path)\r\n    getFromMax(\"pSettings\")\r\n    getFromMax(\"list\", \"savedBoards\")\r\n    getFromMax(\"list\", \"openBoards\"); // for some reason, removing the semi-colon here breaks everything!\r\n    ['sendTo MSDP_System_Board_Audio_Path', 'sendGate 1', 'bang', 'sendGate 0'].map(Max.outlet)\r\n  }\r\n  catch(error) { log(error) }\r\n}\r\nconst add = (type, v, v2) => { // named boards, modules, assets\r\n  try {\r\n    var rand = bigRandStr();\r\n    if (type === 'board') {\r\n      let proto = v;\r\n      if (v === 'undefined') v = 'Board_' + bigRandStr()\r\n      if (session.boardPointers.hasOwnProperty(v) === true) v =+ bigRandStr()\r\n      session.sessionBoards.push({ \"title\": v, \"position\": null, \"power\": 1, 'saved': 0, \"modules\": [] })\r\n      session.boardPointers[v] = {'index': session.sessionBoards.length-1, 'proto': proto, \"open\": 1, 'modules': {}}\r\n      return(v)\r\n    }\r\n    else if (type === 'module') {\r\n      i = session.boardPointers[v].index\r\n      session.sessionBoards[i].modules.push({ \"location\": \"1 1\", \"process\": \"Choose One\", \"id\": v2, \"parameters\": {}})\r\n      session.boardPointers[v].modules[v2] = {'index': session.sessionBoards[i].modules.length-1, 'open': 1, 'id': v2}\r\n    }\r\n    else if (type === 'asset') {\r\n      state.project.assets[v].push(v2)\r\n      log(` ${v2} added to the ${v} list`)\r\n    }\r\n  }\r\n  catch(error) { log(error) }\r\n}\r\n\r\nconst remove = (type, v, v2) => { // named boards, modules, assets\r\n  if (type === 'savedBoard') {\r\n    for (b in state.project.savedBoards) {\r\n      if(state.project.savedBoards[b].title === v) {\r\n        state.project.savedBoards.splice(b, 1)\r\n        log(`board ${v} removed from saved board list`)\r\n        return\r\n      }\r\n    }\r\n    log(`board ${v} not found in saved board list`)\r\n  }\r\n  else if (type === 'openBoard') session.boardPointers[v].open = 0\r\n  else if (type === 'module') session.boardPointers[v]['modules'][v2].open = 0\r\n  else if (type === 'asset') { // remove an asset from the asset list\r\n      for (a in state.project.assets[v]) {\r\n        if(state.project.assets[v][a] === v2) {\r\n          state.project.assets[v].splice(a, 1)\r\n          log(`${v2} at ${v} removed`)\r\n          return\r\n        }\r\n      }\r\n      log(`${asset} in ${type} not found`)\r\n  }\r\n}\r\n\r\nconst update = (type, v, v2, v3, v4, v5) => { // system, project,board, module.\r\n  try {\r\n    if (type === 'value'){\r\n      typeof v2 === 'number' ? e = 'state' + '.' + v + ' = ' + v2 + ';' : e = 'state' + '.' + v + ' = \"' + v2 + '\";'\r\n      log(`update: ${e}`)\r\n      eval(e)\r\n    }\r\n    else if (type === 'board') { //update board value other than modules\r\n      let i = session.boardPointers[v].index\r\n      if(v2 === 'title'){\r\n        if(session.boardPointers.hasOwnProperty(v3) === true) v3 =+ '_' + bigRandStr()\r\n        Object.defineProperty(session.boardPointers, v3, Object.getOwnPropertyDescriptor(session.boardPointers, v))\r\n        delete session.boardPointers[v]\r\n        session.boardPointers[v3].proto = v3\r\n      }\r\n      session.sessionBoards[i][v2] = v3;\r\n      log(`board ${v} ${v2} set to ${v3}`);\r\n    }\r\n    else if (type === 'module'){ //update a module on a board\r\n      let i = session.boardPointers[v]['index'];\r\n      let i2 = session.boardPointers[v]['modules'][v2]['index'];\r\n      if (v3 === 'id') session.boardPointers[v]['modules'][v2]['id'] = v4\r\n      session.sessionBoards[i].modules[i2][v3] = v4\r\n      log(`module ${v2} on board ${v} value ${v3} set to ${v4}`)\r\n    }\r\n    else if (type === 'parameter'){ // update a parameter in a module on a board\r\n      var i = session.boardPointers[v]['index']\r\n      var i2 = session.boardPointers[v]['modules'][v2]['index']\r\n      session.sessionBoards[i]['modules'][i2]['parameters'][v3] = v4\r\n    }\r\n  }\r\n  catch(error) {\r\n    log(error)\r\n  }\r\n}\r\n\r\nconst copy = (loc, val, dest, dest2) => { // session to open, session to saved, open to session, saved to session\r\n  try {\r\n    if (loc === 'session') {\r\n      let index = session.boardPointers[val].index\r\n      let proto = session.boardPointers[val].proto\r\n      let clone = JSON.parse(JSON.stringify(session.sessionBoards[index]))\r\n      clone.title = proto\r\n      let removeList = []\r\n      for (let m in session.boardPointers[val]['modules']) if (session.boardPointers[val]['modules'][m]['open'] === 0) removeList.push(session.boardPointers[val]['modules'][m]['index'])\r\n      removeList.sort(function(a, b){return b-a});\r\n      for (let n in removeList) clone['modules'].splice(removeList[n], 1)\r\n      if (dest === 'open') {\r\n        if (proto != val) {\r\n          if (session.boardPointers.hasOwnProperty(proto) === true) {\r\n            if(session.boardPointers[proto].open === 1) clone.title = val\r\n          }\r\n        }\r\n        state.project.openBoards.push(clone)\r\n      }\r\n      else if (dest === 'saved') {\r\n        session.sessionBoards[index].saved = 1;\r\n        clone.saved = 1;\r\n          for (var c in state.project.savedBoards) {\r\n            if(state.project.savedBoards[c]['title'] === proto) {\r\n              log(`Board ${proto} updated`)\r\n              state.project.savedBoards.splice(c, 1, clone)\r\n              return\r\n            }\r\n          }\r\n        log(`Board ${val} added to saved list`)\r\n        state.project.savedBoards.push(clone)\r\n        }\r\n    }\r\n    else if (loc === 'saved') {\r\n      let clone\r\n      let cloneModules = {}\r\n      for (b in state.project.savedBoards){\r\n        if(state.project.savedBoards[b]['title'] === val) {\r\n          clone = state.project.savedBoards[b]\r\n          for (var m in clone.modules){\r\n            let modName = clone.modules[m].id\r\n            cloneModules[modName] = { 'index': m,'open': 1 }\r\n          }\r\n        }\r\n      }\r\n      if (session.boardPointers.hasOwnProperty(val) === true) clone.title =+ bigRandStr()\r\n      session.boardPointers[clone.title] = {'index': session.sessionBoards.length, 'proto': val, \"open\": 1, 'modules': cloneModules}\r\n      session.sessionBoards.push(clone)\r\n      log(`Board ${clone.title} added to session`);\r\n    }\r\n    else if (loc === 'open') { // copy saved open board into session\r\n      let clone\r\n      let cloneModules = {}\r\n      for (b in state.project.openBoards){\r\n        if (state.project.openBoards[b].title === val) {\r\n          clone = state.project.openBoards[b]\r\n          for (let m in clone.modules){\r\n            let modName = clone.modules[m].id;\r\n            cloneModules[modName] = {'index': m,'open': 1}\r\n          }\r\n        }\r\n      }\r\n      if (session.boardPointers.hasOwnProperty(val) === true) clone.title =+ bigRandStr()\r\n      session.boardPointers[clone.title] = {'index': session.sessionBoards.length, 'proto': val, \"open\": 1, 'modules': cloneModules}\r\n      session.sessionBoards.push(clone)\r\n      log(`Board ${clone.title} added to session`)\r\n    }\r\n  }\r\n  catch(error) {\r\n    log(error)\r\n  }\r\n}\r\n\r\nconst getFromMax = (type, v, v2) => { // data from state to max\r\n  try {\r\n    if (type === 'path'){ // get the project path\r\n        let p = state.project.path\r\n        p = p.substring(0, p.lastIndexOf(\"/\"))\r\n        Max.outlet (\"sendTo MDSP_Backup_pPath\"); Max.outlet (\"sendGate 1\"); Max.outlet (p); Max.outlet (\"sendGate 0\"); // .map added index number and dictionary after. Discuss with Dirk\r\n    }\r\n    else if (type === 'system') [\"sendTo MSDP_System_Settings_Set\", \"sendGate 1\", JSON.stringify(state.system, null, 4), \"sendGate 0\" ].map(Max.outlet)\r\n    else if ( type === 'pSettings') [\"sendTo MSDP_Project_Settings_Set\", \"sendGate 1\", JSON.stringify(state.project.settings, null, 4), \"sendGate 0\", \"sendTo MSDP_Metro_Settings_Set\", \"sendGate 1\", JSON.stringify(state.project.systemBoard, null, 4), \"sendGate 0\" ].map(Max.outlet)\r\n    else if ( type === 'pSysBoard'){\r\n      if (v === \"virtual\") [\"sendTo MSDP_Virtual_Settings_Set\", \"sendGate 1\", JSON.stringify(state.project.systemBoard, null, 4), \"sendGate 0\" ].map(Max.outlet)\r\n    }\r\n    else if (type === 'list'){ // determine whether asking for a list of boards or modules off a board\r\n      if (v === 'savedBoards') {\r\n        if (v2 === \"meta\") Max.outlet(\"sendTo MSDP_Saved_Boards_List_Meta\")\r\n        else if (v2 === \"deleted\") Max.outlet(\"sendTo MSDP_Deleted_Boards_List\")\r\n        else Max.outlet(\"sendTo MSDP_Saved_Boards_List\")\r\n        Max.outlet(\"sendGate 1\")\r\n        for (b in state.project.savedBoards) {\r\n          let savedBoardList = []\r\n          savedBoardList.push(state.project.savedBoards[b].title)\r\n          Max.outlet(savedBoardList)\r\n        }\r\n        Max.outlet(\"sendGate 0\")\r\n      }\r\n      else if (v === 'openBoards') {\r\n        [\"sendTo MSDP_Open_Board_List_Load\", \"sendGate 1\"].map(Max.outlet)\r\n        for (b in state.project.openBoards){\r\n          let openBoardList = []\r\n          openBoardList.push(state.project.openBoards[b]['title'])\r\n          Max.outlet(openBoardList)\r\n        }\r\n        Max.outlet (\"sendGate 0\")\r\n      }\r\n    }\r\n    else if (type === 'board'){\r\n      let path\r\n      let title = v2\r\n      if (v === 'open') path = state.project.openBoards\r\n      else if (v === 'saved') {\r\n          path = state.project.savedBoards\r\n          title = add(\"board\", v2)\r\n      }\r\n      for (b in path) {\r\n        if (path[b]['title'] === v2){\r\n          [\"sendTo \" + v2, \"sendGate 1\", \"title \" + title, JSON.stringify(path[b], null, 4), \"sendGate 0\" ].map(Max.outlet)\r\n          return\r\n        }\r\n      }\r\n      log(`${v2} not found`);\r\n    }\r\n  }\r\n  catch(error) {\r\n    log(error)\r\n  }\r\n}\r\n\r\nconst exporter = (type, v1, v2) => { // system, project, backup, analytics\r\n  // try {\r\n    let path, output\r\n    if (type === 'home') { //send all information out\r\n      Max.outlet (\"uname \" + JSON.stringify(state.system.uName, null, 4))\r\n      state.project.openBoards = []\r\n      for (let key in session.boardPointers) {\r\n        if (session.boardPointers.hasOwnProperty(key)) if (session.boardPointers[key]['open'] === 1) if (isEmpty(session.boardPointers[key].modules) === false ) copy('session', key, 'open')\r\n      }\r\n      state.project.lastUpdated = new Date()\r\n      // Max.outlet (\"stateOut \" + JSON.stringify(state, null, 4))\r\n      Max.outlet('sendTo MSDP_State_Information_Out')\r\n      Max.outlet('sendGate 1')\r\n      Max.outlet(JSON.stringify(state, null, 4))\r\n      Max.outlet('sendGate 0')\r\n      return\r\n    }\r\n    else if (type === 'system') { //export system info\r\n      if (state.system.uName === null){\r\n        state.system.uName = uuidv1()\r\n        Max.outlet (\"uname \" + JSON.stringify(state.system.uName, null, 4))\r\n      }\r\n      path = v1\r\n      output = state.system\r\n    }\r\n    else if (type === 'project') { //export project info\r\n      state.project.openBoards = []\r\n      for (let key in session.boardPointers) {\r\n        if (session.boardPointers.hasOwnProperty(key)) if (session.boardPointers[key].open === 1) if (isEmpty(session.boardPointers[key].modules) === false ) copy('session', key, 'open')\r\n      }\r\n      state.project.lastUpdated = new Date()\r\n      path = v1\r\n      output = state.project\r\n    }\r\n    else if (type === 'board') {\r\n      path = v2\r\n      output = session.sessionBoards[session.boardPointers[v1].index]\r\n      let removeList = []\r\n      for (let m in session.boardPointers[v1].modules) if (session.boardPointers[v1].modules[m].open === 0) removeList.push(session.boardPointers[v1].modules[m].index)\r\n      removeList.sort(function(a, b){return b-a})\r\n      for (let n in removeList) mode['modules'].splice(n+1, 1)\r\n    }\r\n    fs.writeFileSync(path+\".temp\", JSON.stringify(output, null, 4))\r\n    let fileCheck = fs.existsSync(path)\r\n    if (fileCheck == 1) fs.unlinkSync(path)\r\n    fs.renameSync(path+\".temp\", path)\r\n    log(`JSON write ${path}`)\r\n  // }\r\n  // catch(error){ log(error) }\r\n}\r\n\r\nconst importer = (type, path) => { // system, project, backup\r\n  try {\r\n    let clone = require(path) // should check if exists, if not, make\r\n    log(`JSON read ${path}`)\r\n    if (type === 'system'){\r\n      if (fs.existsSync(path)) {\r\n        state.system = clone\r\n        if (state.system.appState.major === 1 ) {\r\n          let uName = state.system.uName\r\n          state.system = defaultSystem\r\n          state.system.uName = uName\r\n          exporter('system', path)\r\n        }\r\n        if (state.system.dev === true) {Max.outlet (\"dev 1\")}\r\n        if (state.system.autoUpdate === null) { [\"sendTo MSDP_AutoUpdate_Window_Confirm\", \"sendGate 1\", \"open\", \"sendGate 0\" ].map(Max.outlet) }\r\n        Max.outlet (\"uname \" + JSON.stringify(state.system.uName, null, 4))\r\n        if (typeof state.system.defaultSettings == \"undefined\") {\r\n          state.system.defaultSettings = state.system.settings\r\n          delete state.system.settings\r\n        }\r\n      }\r\n      else { // if not initialized, make system file\r\n        state.system = defaultSystem\r\n        exporter('system', path)\r\n        [\"sendTo MSDP_AutoUpdate_Window_Confirm\", \"sendGate 1\", \"open\", \"sendGate 0\" ].map(Max.outlet)\r\n      }\r\n    }\r\n    else if (type === 'backup'){ // load a saved project\r\n      session.sessionBoards = [];\r\n      session.boardPointers = {};\r\n      msdp.project = clone;\r\n      log(1, 'last save ' + msdp.project.title + ' loaded');\r\n    }\r\n    else if (type === 'project'){\r\n      session.sessionBoards = [], session.boardPointers = {}\r\n      state.project = clone\r\n      state.project.lastOpened = new Date(), state.project.lastUpdated = new Date()\r\n      log(`project ${state.project.title} loaded`)\r\n    }\r\n    else if (type === 'board'){\r\n      let cloneModules = {}\r\n      for (let m in clone.modules) cloneModules[clone.modules[m].id] = {'index': m,'open': 1}\r\n      if (session.boardPointers.hasOwnProperty(clone.title) === true) clone.title =+ bigRandStr()\r\n      session.boardPointers[clone.title] = {'index': session.sessionBoards.length, 'proto': clone.title, \"open\": 1, 'modules': cloneModules}\r\n      session.sessionBoards.push(clone)\r\n      log(`board ${clone.title} imported into session`)\r\n      getFromMax('board', 'session', clone.title)\r\n    }\r\n    else if (type === 'system') {\r\n      state.system = clone\r\n    \tlog(`JSON Read ${path}`)\r\n    }\r\n  }\r\n  catch(error) { log(error) }\r\n}\r\n\r\nconst bigRandStr = () => Math.floor(Math.random() * 4294967295).toString(16)\r\n\r\nconst isEmpty = (obj) => {\r\n  for (let key in obj) if (obj.hasOwnProperty(key)) return false\r\n  return true\r\n};\r\n"]}